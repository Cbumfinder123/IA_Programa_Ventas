package cibertec;

import java.awt.BorderLayout;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.awt.event.ActionEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;

public class GenerarReporte extends JDialog implements ActionListener {

	private final JPanel contentPanel = new JPanel();
	private JLabel lblTipo;
	private JComboBox cboTipo;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			GenerarReporte dialog = new GenerarReporte();
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Create the dialog.
	 */
	public GenerarReporte() {
		setTitle("Generar Reportes");
		setFont(new Font("Monospaced", Font.PLAIN, 13));
		setBounds(100, 100, 603, 302);
		getContentPane().setLayout(new BorderLayout());
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel, BorderLayout.CENTER);
		contentPanel.setLayout(null);
		
		lblTipo = new JLabel("Tipo de Reporte");
		lblTipo.setBounds(10, 12, 99, 25);
		contentPanel.add(lblTipo);
		
		cboTipo = new JComboBox();
		cboTipo.addActionListener(this);
		cboTipo.setModel(new DefaultComboBoxModel(new String[] {"Ventas por modelo", "Comparaci\u00F3n de precio con el precio promedio", "Comparaci\u00F3n de cajas vendidas con la cantidad \u00F3ptima", "Estadistica sobre el precio"}));
		cboTipo.setBounds(107, 12, 328, 25);
		contentPanel.add(cboTipo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(488, 14, 89, 23);
		contentPanel.add(btnCerrar);
		
		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 57, 567, 195);
		contentPanel.add(scrollPane);
		
		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);
	}
	//Variables

	
	//Fin
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == cboTipo) {
			actionPerformedCboTipo(e);
		}
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
	
	
	// varibles globale
	double precioprom = (Tienda.precio0 + Tienda.precio1 + Tienda.precio2 + Tienda.precio3 + Tienda.precio4)/5;
	double anchoprom = (Tienda.ancho0 + Tienda.ancho1 + Tienda.ancho2 + Tienda.ancho3 + Tienda.ancho4)/5;
	
	DecimalFormat formato1 = new DecimalFormat("0.00");
	//tipo de reporte del cbo}
	
	void tipoReporte() {
		// String tipoReporte = cboTipo.getSelectedItem().toString();
		
		int tipo = cboTipo.getSelectedIndex();
				
		 switch (tipo) {
	        case 0:
	            generarReporteVentasPorModelo();
	            break;
	        case 1:
	            generarReporteComparacionPrecio();
	            break;
	        case 2:
	            generarReporteComparacionCantidadOptima();
	            break;
	        case 3:
	            generarReporteEstadisticaPrecio();
	            break;
		 }
	}
	
	//generar reporte por modelo
	void generarReporteVentasPorModelo() {
		
		
		txtS.setText("VENTAS POR MODELO \n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo0 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta0 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas0 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado0) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota0) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo1 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta1 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas1 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado1) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota1) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo2 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta2 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas2 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado2) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota2) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo3 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta3 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas3 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado3) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota3) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo4 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta4 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas4 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado4) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota4) + "%\n\n");
	
		 txtS.setCaretPosition(0);
	}
	
	//generar reporte comparación precio con precio promedio
	void generarReporteComparacionPrecio() {
		
		txtS.setText("COMPARACIÓN DE PRECIOS CON EL PRECIO PROMEDIO\n\n" );
		
		txtS.append("Modelo            : " + Tienda.modelo0 + "\n");
		txtS.append("Precio            : S/. " + formato1.format(Tienda.precio0) + "\n");
		txtS.append("Precio promedio   : S/. " + formato1.format(precioprom) + "\n");
		if(Tienda.precio0 < precioprom) {
			txtS.append("Comparación       : S/. " + formato1.format(Tienda.precio0 - precioprom) + " menor que el promedio\n\n");
		}else if(Tienda.precio0 > precioprom) {
			txtS.append("Comparación       : S/. " + formato1.format(Tienda.precio0 - precioprom) + " más que el promedio\n\n");
		}else{
			txtS.append("Comparación       : "  + " igual que el promedio\n\n");
		}
		
		txtS.append("Modelo            : " + Tienda.modelo1 + "\n");
		txtS.append("Precio            : S/. " + formato1.format(Tienda.precio1) + "\n");
		txtS.append("Precio promedio   : S/. " + formato1.format(precioprom) + "\n");
		if(Tienda.precio1 < precioprom) {
			txtS.append("Comparación       : S/. " + formato1.format(Tienda.precio1 - precioprom) + " menor que el promedio\n\n");
		}else if(Tienda.precio1 > precioprom) {
			txtS.append("Comparación       : S/. " + formato1.format(Tienda.precio1 - precioprom) + " más que el promedio\n\n");
		}else{
			txtS.append("Comparación       : "  + " igual que el promedio\n\n");
		}
		
		txtS.append("Modelo            : " + Tienda.modelo2 + "\n");
		txtS.append("Precio            : S/. " + formato1.format(Tienda.precio2) + "\n");
		txtS.append("Precio promedio   : S/. " + formato1.format(precioprom) + "\n");
		if(Tienda.precio2 < precioprom) {
			txtS.append("Comparación       : S/. " + formato1.format(Tienda.precio2 - precioprom) + " menor que el promedio\n\n");
		}else if(Tienda.precio2 > precioprom) {
			txtS.append("Comparación       : S/. " + formato1.format(Tienda.precio2 - precioprom) + " más que el promedio\n\n");
		}else{
			txtS.append("Comparación       : "  + " igual que el promedio\n\n");
		}
		
		txtS.append("Modelo            : " + Tienda.modelo3 + "\n");
		txtS.append("Precio            : S/. " + formato1.format(Tienda.precio3) + "\n");
		txtS.append("Precio promedio   : S/. " + formato1.format(precioprom) + "\n");
		if(Tienda.precio3 < precioprom) {
			txtS.append("Comparación       : S/. " + formato1.format(Tienda.precio3 - precioprom) + " menor que el promedio\n\n");
		}else if(Tienda.precio3 > precioprom) {
			txtS.append("Comparación       : S/. " + formato1.format(Tienda.precio3 - precioprom) + " más que el promedio\n\n");
		}else{
			txtS.append("Comparación       : "  + " igual que el promedio\n\n");
		}
		
		txtS.append("Modelo            : " + Tienda.modelo4 + "\n");
		txtS.append("Precio            : S/. " + formato1.format(Tienda.precio4) + "\n");
		txtS.append("Precio promedio   : S/. " + formato1.format(precioprom) + "\n");
		if(Tienda.precio4 < precioprom) {
			txtS.append("Comparación       : S/. " + formato1.format(Tienda.precio4 - precioprom) + " menor que el promedio\n\n");
		}else if(Tienda.precio4 > precioprom) {
			txtS.append("Comparación       : S/. " + formato1.format(Tienda.precio4 - precioprom) + " más que el promedio\n\n");
		}else{
			txtS.append("Comparación       : "  + " igual que el promedio\n\n");
		}
		
		txtS.setCaretPosition(0);	 
	}
	
	//generar reporte comparacion cajas vendidas con cantidad optima
	void generarReporteComparacionCantidadOptima() {
		txtS.setText("COMPARACIÓN DE CAJAS VENDIDAS CON LA CANTIDAD ÓPTIMA\n\n");
		txtS.append("Modelo                      : " + Tienda.modelo0 + "\n");
		txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas0 + "\n");
		txtS.append("Cantidad óptima             : " + Tienda.cantidadOptima + "\n");
		
		if(Tienda.cantUniVendidas0 < Tienda.cantidadOptima) {
			txtS.append("Comparación                 : " + (Tienda.cantUniVendidas0 - Tienda.cantidadOptima) + " menos que la cantidad óptima\n\n");
		}else if(Tienda.cantUniVendidas0 > Tienda.cantidadOptima) {
			txtS.append("Comparación                 : " + (Tienda.cantUniVendidas0 - Tienda.cantidadOptima) + " más que la cantidad óptima\n\n");
		}else {
			txtS.append("Comparación                 : " +  " igual que la cantidad óptima\n\n");
		}
		
		txtS.setCaretPosition(0);	
	}
	
	// estadisticas sobre el precio
	void generarReporteEstadisticaPrecio(){
			 
		 }
	
	protected void actionPerformedCboTipo(ActionEvent e) {
		
		tipoReporte();
		
	}
	
	
	
	
}
