!SESSION 2023-10-16 20:54:03.706 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_PE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-10-16 20:54:35.035
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-10-16 20:54:35.035
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2fccf49e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7abcc0da,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-10-16 20:54:48.366
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\wilde'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.oomph.setup.ui 1 0 2023-10-16 20:54:59.955
!MESSAGE Setup tasks were performed during startup updating 7 preferences.See 'F:\CIBERTEC\INTRODUCCION A LA ALGORITMIA\eclipse-java-2020-12\eclipse\configuration\org.eclipse.oomph.setup\setup.log' for details

!ENTRY org.eclipse.ui 4 4 2023-10-16 21:52:16.014
!MESSAGE To avoid deadlock while executing Display.syncExec() with argument: org.eclipse.debug.internal.ui.sourcelookup.Prompter$$Lambda$1419/0x0000000101044288@2ddb70c8, thread Worker-31: Launching ConsultarCeramico will interrupt UI thread.
!SUBENTRY 1 org.eclipse.ui 4 4 2023-10-16 21:52:16.015
!MESSAGE Worker-31: Launching ConsultarCeramico thread is an instance of Worker or owns an ILock
!STACK 0
java.lang.IllegalStateException: Call stack for thread Worker-31: Launching ConsultarCeramico
	at java.management@15.0.1/sun.management.ThreadImpl.dumpThreads0(Native Method)
	at java.management@15.0.1/sun.management.ThreadImpl.getThreadInfo(ThreadImpl.java:485)
	at org.eclipse.ui.internal.UILockListener.reportInterruption(UILockListener.java:209)
	at org.eclipse.ui.internal.UILockListener.interruptUI(UILockListener.java:179)
	at org.eclipse.ui.internal.PendingSyncExec.waitUntilExecuted(PendingSyncExec.java:92)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:142)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4742)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.handleStatus(Prompter.java:81)
	at org.eclipse.debug.core.model.LaunchConfigurationDelegate.saveBeforeLaunch(LaunchConfigurationDelegate.java:245)
	at org.eclipse.debug.core.model.LaunchConfigurationDelegate.preLaunchCheck(LaunchConfigurationDelegate.java:197)
	at org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate.preLaunchCheck(AbstractJavaLaunchConfigurationDelegate.java:1026)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:770)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:718)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:1021)
	at org.eclipse.debug.internal.ui.DebugUIPlugin$2.run(DebugUIPlugin.java:1224)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SUBENTRY 1 org.eclipse.ui 4 4 2023-10-16 21:52:16.015
!MESSAGE UI thread waiting on a job or lock.
!STACK 0
java.lang.IllegalStateException: Call stack for thread main
	at org.eclipse.core.internal.filesystem.local.LocalFileNatives.internalGetFileInfoW(Native Method)
	at org.eclipse.core.internal.filesystem.local.LocalFileNatives.fetchFileInfo(LocalFileNatives.java:116)
	at org.eclipse.core.internal.filesystem.local.LocalFileHandler.fetchFileInfo(LocalFileHandler.java:30)
	at org.eclipse.core.internal.filesystem.local.LocalFileNativesManager.fetchFileInfo(LocalFileNativesManager.java:65)
	at org.eclipse.core.internal.filesystem.local.LocalFile.fetchInfo(LocalFile.java:162)
	at org.eclipse.core.filesystem.provider.FileStore.fetchInfo(FileStore.java:260)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.fastIsSynchronized(FileSystemResourceManager.java:455)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.isSynchronized(FileSystemResourceManager.java:730)
	at org.eclipse.core.internal.resources.Resource.isSynchronized(Resource.java:1416)
	at org.eclipse.core.internal.filebuffers.ResourceFileBuffer.isSynchronized(ResourceFileBuffer.java:459)
	at org.eclipse.core.internal.filebuffers.ResourceTextFileBuffer.commitFileBufferContent(ResourceTextFileBuffer.java:294)
	at org.eclipse.core.internal.filebuffers.ResourceFileBuffer.commit(ResourceFileBuffer.java:317)
	at org.eclipse.jdt.internal.ui.javaeditor.DocumentAdapter.save(DocumentAdapter.java:516)
	at org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.executeOperation(CommitWorkingCopyOperation.java:127)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2292)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2317)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:811)
	at org.eclipse.jdt.internal.core.CompilationUnit.commitWorkingCopy(CompilationUnit.java:404)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.commitWorkingCopy(CompilationUnitDocumentProvider.java:1418)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$3.execute(CompilationUnitDocumentProvider.java:1495)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider$DocumentProviderOperation.run(TextFileDocumentProvider.java:133)
	at org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute(WorkspaceModifyDelegatingOperation.java:71)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.lambda$0(WorkspaceModifyOperation.java:110)
	at org.eclipse.ui.actions.WorkspaceModifyOperation$$Lambda$1633/0x00000001010669d0.run(Unknown Source)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2292)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2317)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:131)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:76)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:66)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:461)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.saveDocument(TextFileDocumentProvider.java:764)
	at org.eclipse.ui.texteditor.AbstractTextEditor.performSave(AbstractTextEditor.java:5007)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSave(CompilationUnitEditor.java:1264)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:1318)
	at org.eclipse.wb.internal.core.editor.multi.DesignerEditor.doSave(DesignerEditor.java:294)
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.doSave(AbstractTextEditor.java:7151)
	at org.eclipse.ui.Saveable.doSave(Saveable.java:213)
	at org.eclipse.ui.internal.SaveableHelper.doSaveModel(SaveableHelper.java:333)
	at org.eclipse.ui.internal.SaveablesList.lambda$2(SaveablesList.java:850)
	at org.eclipse.ui.internal.SaveablesList$$Lambda$1789/0x000000010112f0a8.run(Unknown Source)
	at org.eclipse.ui.internal.SaveableHelper.lambda$3(SaveableHelper.java:271)
	at org.eclipse.ui.internal.SaveableHelper$$Lambda$1790/0x000000010112f2c8.run(Unknown Source)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2353)
	at org.eclipse.ui.internal.WorkbenchWindow$$Lambda$1200/0x0000000100dcc1a8.run(Unknown Source)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2351)
	at org.eclipse.ui.internal.SaveableHelper.runProgressMonitorOperation(SaveableHelper.java:278)
	at org.eclipse.ui.internal.SaveablesList.saveModels(SaveablesList.java:858)
	at org.eclipse.ui.internal.SaveablesList.saveModels(SaveablesList.java:822)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3426)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter$$Lambda$1419/0x0000000101044288.run(Unknown Source)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer$$Lambda$705/0x0000000100939f68.run(Unknown Source)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.ui.internal.Workbench$$Lambda$222/0x00000001002d2be0.run(Unknown Source)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base@15.0.1/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@15.0.1/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base@15.0.1/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@15.0.1/java.lang.reflect.Method.invoke(Method.java:564)
	at app//org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at app//org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at app//org.eclipse.equinox.launcher.Main.run(Main.java:1461)
!SESSION 2023-11-05 14:03:04.076 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_ES
Framework arguments:  -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product -data C:\Users\User\Downloads\ProyectoFinal -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-11-05 14:03:07.167
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-05 14:03:07.167
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@13c18bba,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@33373f70,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-05 14:03:11.093
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\User'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2023-11-05 14:03:15.513
!MESSAGE Exception while reading last build state for: P/ProyectoCeramica
!STACK 1
org.eclipse.core.runtime.CoreException: Error reading last build state for project ProyectoCeramica
	at org.eclipse.jdt.internal.core.JavaModelManager.readState(JavaModelManager.java:4161)
	at org.eclipse.jdt.internal.core.JavaModelManager.getLastBuiltState(JavaModelManager.java:2287)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.getLastState(JavaBuilder.java:456)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:189)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:845)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:228)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:276)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:329)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:332)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:384)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:405)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:154)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: org.eclipse.core.runtime.CoreException: Failed to init ct.sym for F:\CIBERTEC\INTRODUCCION A LA ALGORITMIA\eclipse-java-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\lib\jrt-fs.jar
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:79)
	at org.eclipse.jdt.internal.core.builder.ClasspathLocation.forJrtSystem(ClasspathLocation.java:147)
	at org.eclipse.jdt.internal.core.builder.State.readBinaryLocations(State.java:369)
	at org.eclipse.jdt.internal.core.builder.State.read(State.java:260)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.readState(JavaBuilder.java:161)
	at org.eclipse.jdt.internal.core.JavaModelManager.readState(JavaModelManager.java:4153)
	... 15 more
Caused by: java.io.FileNotFoundException: File F:\CIBERTEC\INTRODUCCION A LA ALGORITMIA\eclipse-java-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\lib\ct.sym does not exist
	at org.eclipse.jdt.internal.compiler.util.CtSym.init(CtSym.java:126)
	at org.eclipse.jdt.internal.compiler.util.CtSym.<init>(CtSym.java:120)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.lambda$1(JRTUtil.java:136)
	at java.base/java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1916)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.getCtSym(JRTUtil.java:133)
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:77)
	... 20 more
!SUBENTRY 1 org.eclipse.jdt.core 4 2 2023-11-05 14:03:15.513
!MESSAGE Error reading last build state for project ProyectoCeramica
!STACK 1
org.eclipse.core.runtime.CoreException: Failed to init ct.sym for F:\CIBERTEC\INTRODUCCION A LA ALGORITMIA\eclipse-java-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\lib\jrt-fs.jar
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:79)
	at org.eclipse.jdt.internal.core.builder.ClasspathLocation.forJrtSystem(ClasspathLocation.java:147)
	at org.eclipse.jdt.internal.core.builder.State.readBinaryLocations(State.java:369)
	at org.eclipse.jdt.internal.core.builder.State.read(State.java:260)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.readState(JavaBuilder.java:161)
	at org.eclipse.jdt.internal.core.JavaModelManager.readState(JavaModelManager.java:4153)
	at org.eclipse.jdt.internal.core.JavaModelManager.getLastBuiltState(JavaModelManager.java:2287)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.getLastState(JavaBuilder.java:456)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:189)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:845)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:228)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:276)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:329)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:332)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:384)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:405)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:154)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: java.io.FileNotFoundException: File F:\CIBERTEC\INTRODUCCION A LA ALGORITMIA\eclipse-java-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\lib\ct.sym does not exist
	at org.eclipse.jdt.internal.compiler.util.CtSym.init(CtSym.java:126)
	at org.eclipse.jdt.internal.compiler.util.CtSym.<init>(CtSym.java:120)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.lambda$1(JRTUtil.java:136)
	at java.base/java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1916)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.getCtSym(JRTUtil.java:133)
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:77)
	... 20 more
!SUBENTRY 2 org.eclipse.jdt.core 4 0 2023-11-05 14:03:15.513
!MESSAGE Failed to init ct.sym for F:\CIBERTEC\INTRODUCCION A LA ALGORITMIA\eclipse-java-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\lib\jrt-fs.jar
!STACK 0
java.io.FileNotFoundException: File F:\CIBERTEC\INTRODUCCION A LA ALGORITMIA\eclipse-java-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\lib\ct.sym does not exist
	at org.eclipse.jdt.internal.compiler.util.CtSym.init(CtSym.java:126)
	at org.eclipse.jdt.internal.compiler.util.CtSym.<init>(CtSym.java:120)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.lambda$1(JRTUtil.java:136)
	at java.base/java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1916)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.getCtSym(JRTUtil.java:133)
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:77)
	at org.eclipse.jdt.internal.core.builder.ClasspathLocation.forJrtSystem(ClasspathLocation.java:147)
	at org.eclipse.jdt.internal.core.builder.State.readBinaryLocations(State.java:369)
	at org.eclipse.jdt.internal.core.builder.State.read(State.java:260)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.readState(JavaBuilder.java:161)
	at org.eclipse.jdt.internal.core.JavaModelManager.readState(JavaModelManager.java:4153)
	at org.eclipse.jdt.internal.core.JavaModelManager.getLastBuiltState(JavaModelManager.java:2287)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.getLastState(JavaBuilder.java:456)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:189)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:845)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:228)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:276)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:329)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:332)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:384)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:405)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:154)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.debug.ui 4 120 2023-11-05 14:22:03.229
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.FutureTask.awaitDone(FutureTask.java:418)
	at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:203)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.runInUIThreadWithTimeout(SelectedResourceManager.java:262)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getFromUI(SelectedResourceManager.java:240)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getActiveWindow(SelectedResourceManager.java:231)
	at org.eclipse.debug.ui.DebugUITools.getDebugContext(DebugUITools.java:247)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getFrame(JavaDebugHover.java:97)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo2(JavaDebugHover.java:251)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SESSION 2023-11-06 18:51:00.681 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_ES
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-11-06 18:51:03.203
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-06 18:51:03.203
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1fcc3461,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1987807b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-06 18:51:11.766
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\User'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-11-06 21:38:55.201 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_MX
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-11-06 21:42:44.974
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-06 21:42:44.974
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@fe156f4,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@79b4cff,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-06 21:42:57.770
!MESSAGE Exception while reading last build state for: P/ProyectoCeramica
!STACK 1
org.eclipse.core.runtime.CoreException: Error reading last build state for project ProyectoCeramica
	at org.eclipse.jdt.internal.core.JavaModelManager.readState(JavaModelManager.java:4161)
	at org.eclipse.jdt.internal.core.JavaModelManager.getLastBuiltState(JavaModelManager.java:2287)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.getLastState(JavaBuilder.java:456)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:189)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:845)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:228)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:276)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:329)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:332)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:384)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:405)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:154)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: org.eclipse.core.runtime.CoreException: Failed to init ct.sym for C:\Users\User\Downloads\apps\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\jrt-fs.jar
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:79)
	at org.eclipse.jdt.internal.core.builder.ClasspathLocation.forJrtSystem(ClasspathLocation.java:147)
	at org.eclipse.jdt.internal.core.builder.State.readBinaryLocations(State.java:369)
	at org.eclipse.jdt.internal.core.builder.State.read(State.java:260)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.readState(JavaBuilder.java:161)
	at org.eclipse.jdt.internal.core.JavaModelManager.readState(JavaModelManager.java:4153)
	... 15 more
Caused by: java.io.FileNotFoundException: File C:\Users\User\Downloads\apps\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\ct.sym does not exist
	at org.eclipse.jdt.internal.compiler.util.CtSym.init(CtSym.java:126)
	at org.eclipse.jdt.internal.compiler.util.CtSym.<init>(CtSym.java:120)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.lambda$1(JRTUtil.java:136)
	at java.base/java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1955)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.getCtSym(JRTUtil.java:133)
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:77)
	... 20 more
!SUBENTRY 1 org.eclipse.jdt.core 4 2 2023-11-06 21:42:57.771
!MESSAGE Error reading last build state for project ProyectoCeramica
!STACK 1
org.eclipse.core.runtime.CoreException: Failed to init ct.sym for C:\Users\User\Downloads\apps\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\jrt-fs.jar
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:79)
	at org.eclipse.jdt.internal.core.builder.ClasspathLocation.forJrtSystem(ClasspathLocation.java:147)
	at org.eclipse.jdt.internal.core.builder.State.readBinaryLocations(State.java:369)
	at org.eclipse.jdt.internal.core.builder.State.read(State.java:260)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.readState(JavaBuilder.java:161)
	at org.eclipse.jdt.internal.core.JavaModelManager.readState(JavaModelManager.java:4153)
	at org.eclipse.jdt.internal.core.JavaModelManager.getLastBuiltState(JavaModelManager.java:2287)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.getLastState(JavaBuilder.java:456)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:189)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:845)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:228)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:276)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:329)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:332)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:384)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:405)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:154)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: java.io.FileNotFoundException: File C:\Users\User\Downloads\apps\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\ct.sym does not exist
	at org.eclipse.jdt.internal.compiler.util.CtSym.init(CtSym.java:126)
	at org.eclipse.jdt.internal.compiler.util.CtSym.<init>(CtSym.java:120)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.lambda$1(JRTUtil.java:136)
	at java.base/java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1955)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.getCtSym(JRTUtil.java:133)
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:77)
	... 20 more
!SUBENTRY 2 org.eclipse.jdt.core 4 0 2023-11-06 21:42:57.771
!MESSAGE Failed to init ct.sym for C:\Users\User\Downloads\apps\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\jrt-fs.jar
!STACK 0
java.io.FileNotFoundException: File C:\Users\User\Downloads\apps\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\ct.sym does not exist
	at org.eclipse.jdt.internal.compiler.util.CtSym.init(CtSym.java:126)
	at org.eclipse.jdt.internal.compiler.util.CtSym.<init>(CtSym.java:120)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.lambda$1(JRTUtil.java:136)
	at java.base/java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1955)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.getCtSym(JRTUtil.java:133)
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:77)
	at org.eclipse.jdt.internal.core.builder.ClasspathLocation.forJrtSystem(ClasspathLocation.java:147)
	at org.eclipse.jdt.internal.core.builder.State.readBinaryLocations(State.java:369)
	at org.eclipse.jdt.internal.core.builder.State.read(State.java:260)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.readState(JavaBuilder.java:161)
	at org.eclipse.jdt.internal.core.JavaModelManager.readState(JavaModelManager.java:4153)
	at org.eclipse.jdt.internal.core.JavaModelManager.getLastBuiltState(JavaModelManager.java:2287)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.getLastState(JavaBuilder.java:456)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:189)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:845)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:228)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:276)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:329)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:332)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:384)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:405)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:154)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-06 21:42:58.502
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\user'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-11-06 21:57:14.121 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_ES
Framework arguments:  -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product -data C:\Users\User\Documents\ProyectoFinal -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-11-06 21:57:18.102
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-06 21:57:18.102
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@254513e8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@74450c9b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-06 21:57:24.730
!MESSAGE Exception while reading last build state for: P/ProyectoCeramica
!STACK 1
org.eclipse.core.runtime.CoreException: Error reading last build state for project ProyectoCeramica
	at org.eclipse.jdt.internal.core.JavaModelManager.readState(JavaModelManager.java:4161)
	at org.eclipse.jdt.internal.core.JavaModelManager.getLastBuiltState(JavaModelManager.java:2287)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.getLastState(JavaBuilder.java:456)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:189)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:845)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:228)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:276)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:329)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:332)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:384)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:405)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:154)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: org.eclipse.core.runtime.CoreException: Failed to init ct.sym for E:\backup\Documentos\T1BL ECLIPSE\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\jrt-fs.jar
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:79)
	at org.eclipse.jdt.internal.core.builder.ClasspathLocation.forJrtSystem(ClasspathLocation.java:147)
	at org.eclipse.jdt.internal.core.builder.State.readBinaryLocations(State.java:369)
	at org.eclipse.jdt.internal.core.builder.State.read(State.java:260)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.readState(JavaBuilder.java:161)
	at org.eclipse.jdt.internal.core.JavaModelManager.readState(JavaModelManager.java:4153)
	... 15 more
Caused by: java.io.FileNotFoundException: File E:\backup\Documentos\T1BL ECLIPSE\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\ct.sym does not exist
	at org.eclipse.jdt.internal.compiler.util.CtSym.init(CtSym.java:126)
	at org.eclipse.jdt.internal.compiler.util.CtSym.<init>(CtSym.java:120)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.lambda$1(JRTUtil.java:136)
	at java.base/java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1955)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.getCtSym(JRTUtil.java:133)
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:77)
	... 20 more
!SUBENTRY 1 org.eclipse.jdt.core 4 2 2023-11-06 21:57:24.730
!MESSAGE Error reading last build state for project ProyectoCeramica
!STACK 1
org.eclipse.core.runtime.CoreException: Failed to init ct.sym for E:\backup\Documentos\T1BL ECLIPSE\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\jrt-fs.jar
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:79)
	at org.eclipse.jdt.internal.core.builder.ClasspathLocation.forJrtSystem(ClasspathLocation.java:147)
	at org.eclipse.jdt.internal.core.builder.State.readBinaryLocations(State.java:369)
	at org.eclipse.jdt.internal.core.builder.State.read(State.java:260)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.readState(JavaBuilder.java:161)
	at org.eclipse.jdt.internal.core.JavaModelManager.readState(JavaModelManager.java:4153)
	at org.eclipse.jdt.internal.core.JavaModelManager.getLastBuiltState(JavaModelManager.java:2287)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.getLastState(JavaBuilder.java:456)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:189)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:845)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:228)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:276)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:329)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:332)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:384)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:405)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:154)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: java.io.FileNotFoundException: File E:\backup\Documentos\T1BL ECLIPSE\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\ct.sym does not exist
	at org.eclipse.jdt.internal.compiler.util.CtSym.init(CtSym.java:126)
	at org.eclipse.jdt.internal.compiler.util.CtSym.<init>(CtSym.java:120)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.lambda$1(JRTUtil.java:136)
	at java.base/java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1955)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.getCtSym(JRTUtil.java:133)
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:77)
	... 20 more
!SUBENTRY 2 org.eclipse.jdt.core 4 0 2023-11-06 21:57:24.730
!MESSAGE Failed to init ct.sym for E:\backup\Documentos\T1BL ECLIPSE\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\jrt-fs.jar
!STACK 0
java.io.FileNotFoundException: File E:\backup\Documentos\T1BL ECLIPSE\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\ct.sym does not exist
	at org.eclipse.jdt.internal.compiler.util.CtSym.init(CtSym.java:126)
	at org.eclipse.jdt.internal.compiler.util.CtSym.<init>(CtSym.java:120)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.lambda$1(JRTUtil.java:136)
	at java.base/java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1955)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.getCtSym(JRTUtil.java:133)
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:77)
	at org.eclipse.jdt.internal.core.builder.ClasspathLocation.forJrtSystem(ClasspathLocation.java:147)
	at org.eclipse.jdt.internal.core.builder.State.readBinaryLocations(State.java:369)
	at org.eclipse.jdt.internal.core.builder.State.read(State.java:260)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.readState(JavaBuilder.java:161)
	at org.eclipse.jdt.internal.core.JavaModelManager.readState(JavaModelManager.java:4153)
	at org.eclipse.jdt.internal.core.JavaModelManager.getLastBuiltState(JavaModelManager.java:2287)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.getLastState(JavaBuilder.java:456)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:189)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:845)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:228)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:276)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:329)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:332)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:384)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:405)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:154)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-06 21:57:25.303
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\User'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-11-06 22:15:26.968 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_ES
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-11-06 22:15:30.611
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-06 22:15:30.611
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5c703860,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6315bb4,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-06 22:15:36.144
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\User'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-11-06 22:15:49.241 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_ES
Framework arguments:  -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product -data C:\Users\User\Downloads\ProyectoFinal -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-11-06 22:15:52.690
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-06 22:15:52.690
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@254513e8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@74450c9b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-06 22:15:57.843
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\User'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-11-07 16:18:55.621 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_ES
Framework arguments:  -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product -data C:\Users\User\Downloads\trabajo\ProyectoFinal -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-11-07 16:18:58.581
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-07 16:18:58.581
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@bff764c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3beaa16d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-07 16:19:05.351
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\User'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.debug.ui 4 120 2023-11-07 16:23:56.450
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.FutureTask.awaitDone(FutureTask.java:418)
	at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:203)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.runInUIThreadWithTimeout(SelectedResourceManager.java:262)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getFromUI(SelectedResourceManager.java:240)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getActiveWindow(SelectedResourceManager.java:231)
	at org.eclipse.debug.ui.DebugUITools.getDebugContext(DebugUITools.java:247)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getFrame(JavaDebugHover.java:97)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo2(JavaDebugHover.java:251)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SESSION 2023-11-07 16:46:04.048 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_ES
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-11-07 16:46:06.460
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-07 16:46:06.460
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@52efb338,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@64508788,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-07 16:46:07.693
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\User'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-11-20 10:35:45.016 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_PE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-11-20 10:37:21.590
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-20 10:37:21.590
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@40fcaae7,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7fa85a55,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-20 10:38:40.704
!MESSAGE Exception while reading last build state for: P/ProyectoCeramica
!STACK 1
org.eclipse.core.runtime.CoreException: Error reading last build state for project ProyectoCeramica
	at org.eclipse.jdt.internal.core.JavaModelManager.readState(JavaModelManager.java:4161)
	at org.eclipse.jdt.internal.core.JavaModelManager.getLastBuiltState(JavaModelManager.java:2287)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.getLastState(JavaBuilder.java:456)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:189)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:845)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:228)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:276)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:329)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:332)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:384)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:405)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:154)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: org.eclipse.core.runtime.CoreException: Failed to init ct.sym for C:\Users\User\Downloads\apps\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\jrt-fs.jar
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:79)
	at org.eclipse.jdt.internal.core.builder.ClasspathLocation.forJrtSystem(ClasspathLocation.java:147)
	at org.eclipse.jdt.internal.core.builder.State.readBinaryLocations(State.java:369)
	at org.eclipse.jdt.internal.core.builder.State.read(State.java:260)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.readState(JavaBuilder.java:161)
	at org.eclipse.jdt.internal.core.JavaModelManager.readState(JavaModelManager.java:4153)
	... 15 more
Caused by: java.io.FileNotFoundException: File C:\Users\User\Downloads\apps\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\ct.sym does not exist
	at org.eclipse.jdt.internal.compiler.util.CtSym.init(CtSym.java:126)
	at org.eclipse.jdt.internal.compiler.util.CtSym.<init>(CtSym.java:120)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.lambda$1(JRTUtil.java:136)
	at java.base/java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1916)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.getCtSym(JRTUtil.java:133)
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:77)
	... 20 more
!SUBENTRY 1 org.eclipse.jdt.core 4 2 2023-11-20 10:38:40.705
!MESSAGE Error reading last build state for project ProyectoCeramica
!STACK 1
org.eclipse.core.runtime.CoreException: Failed to init ct.sym for C:\Users\User\Downloads\apps\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\jrt-fs.jar
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:79)
	at org.eclipse.jdt.internal.core.builder.ClasspathLocation.forJrtSystem(ClasspathLocation.java:147)
	at org.eclipse.jdt.internal.core.builder.State.readBinaryLocations(State.java:369)
	at org.eclipse.jdt.internal.core.builder.State.read(State.java:260)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.readState(JavaBuilder.java:161)
	at org.eclipse.jdt.internal.core.JavaModelManager.readState(JavaModelManager.java:4153)
	at org.eclipse.jdt.internal.core.JavaModelManager.getLastBuiltState(JavaModelManager.java:2287)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.getLastState(JavaBuilder.java:456)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:189)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:845)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:228)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:276)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:329)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:332)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:384)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:405)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:154)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: java.io.FileNotFoundException: File C:\Users\User\Downloads\apps\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\ct.sym does not exist
	at org.eclipse.jdt.internal.compiler.util.CtSym.init(CtSym.java:126)
	at org.eclipse.jdt.internal.compiler.util.CtSym.<init>(CtSym.java:120)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.lambda$1(JRTUtil.java:136)
	at java.base/java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1916)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.getCtSym(JRTUtil.java:133)
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:77)
	... 20 more
!SUBENTRY 2 org.eclipse.jdt.core 4 0 2023-11-20 10:38:40.705
!MESSAGE Failed to init ct.sym for C:\Users\User\Downloads\apps\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\jrt-fs.jar
!STACK 0
java.io.FileNotFoundException: File C:\Users\User\Downloads\apps\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\ct.sym does not exist
	at org.eclipse.jdt.internal.compiler.util.CtSym.init(CtSym.java:126)
	at org.eclipse.jdt.internal.compiler.util.CtSym.<init>(CtSym.java:120)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.lambda$1(JRTUtil.java:136)
	at java.base/java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1916)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.getCtSym(JRTUtil.java:133)
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:77)
	at org.eclipse.jdt.internal.core.builder.ClasspathLocation.forJrtSystem(ClasspathLocation.java:147)
	at org.eclipse.jdt.internal.core.builder.State.readBinaryLocations(State.java:369)
	at org.eclipse.jdt.internal.core.builder.State.read(State.java:260)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.readState(JavaBuilder.java:161)
	at org.eclipse.jdt.internal.core.JavaModelManager.readState(JavaModelManager.java:4153)
	at org.eclipse.jdt.internal.core.JavaModelManager.getLastBuiltState(JavaModelManager.java:2287)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.getLastState(JavaBuilder.java:456)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:189)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:845)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:228)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:276)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:329)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:332)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:384)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:405)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:154)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-20 10:38:43.339
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\wilde'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-11-20 10:51:54.495 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_PE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-11-20 10:52:38.771
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-20 10:52:38.771
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4790b897,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5cba890e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-20 10:52:56.937
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\wilde'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.debug.ui 4 120 2023-11-20 11:15:07.228
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.FutureTask.awaitDone(FutureTask.java:418)
	at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:203)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.runInUIThreadWithTimeout(SelectedResourceManager.java:262)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getFromUI(SelectedResourceManager.java:240)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getActiveWindow(SelectedResourceManager.java:231)
	at org.eclipse.debug.ui.DebugUITools.getDebugContext(DebugUITools.java:247)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getFrame(JavaDebugHover.java:97)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo2(JavaDebugHover.java:251)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SESSION 2023-11-20 16:31:46.291 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_PE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-11-20 16:32:17.441
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-20 16:32:17.441
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@72d16d6,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7b0525a8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-20 16:32:23.179
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\wilde'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-11-24 17:38:17.920 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_PE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-11-24 17:39:59.577
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-24 17:39:59.577
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@547052,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3ca3eba2,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-24 17:40:25.340
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\wilde'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-11-24 19:07:09.804 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_PE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 2 10035 2023-11-24 19:10:22.286
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2023-11-24 19:10:26.192
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-24 19:10:26.192
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1eee9b78,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@36762234,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-24 19:10:41.676
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\user'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-11-24 19:25:37.873 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_PE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-11-24 19:26:26.869
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-24 19:26:26.869
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6821c63c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@c2f7c63,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-24 19:26:36.319
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\user'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-11-25 06:14:38.834 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_ES
Framework arguments:  -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product -data C:\Users\User\Downloads\trabajo\ProyectoFinal -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-11-25 06:14:41.625
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-25 06:14:41.625
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4b99648a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5d2e65bd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 06:14:46.581
!MESSAGE Exception while reading last build state for: P/ProyectoCeramica
!STACK 1
org.eclipse.core.runtime.CoreException: Error reading last build state for project ProyectoCeramica
	at org.eclipse.jdt.internal.core.JavaModelManager.readState(JavaModelManager.java:4161)
	at org.eclipse.jdt.internal.core.JavaModelManager.getLastBuiltState(JavaModelManager.java:2287)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.getLastState(JavaBuilder.java:456)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:189)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:845)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:228)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:276)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:329)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:332)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:384)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:405)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:154)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: org.eclipse.core.runtime.CoreException: Failed to init ct.sym for E:\backup\Documentos\T1BL ECLIPSE\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\jrt-fs.jar
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:79)
	at org.eclipse.jdt.internal.core.builder.ClasspathLocation.forJrtSystem(ClasspathLocation.java:147)
	at org.eclipse.jdt.internal.core.builder.State.readBinaryLocations(State.java:369)
	at org.eclipse.jdt.internal.core.builder.State.read(State.java:260)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.readState(JavaBuilder.java:161)
	at org.eclipse.jdt.internal.core.JavaModelManager.readState(JavaModelManager.java:4153)
	... 15 more
Caused by: java.io.FileNotFoundException: File E:\backup\Documentos\T1BL ECLIPSE\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\ct.sym does not exist
	at org.eclipse.jdt.internal.compiler.util.CtSym.init(CtSym.java:126)
	at org.eclipse.jdt.internal.compiler.util.CtSym.<init>(CtSym.java:120)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.lambda$1(JRTUtil.java:136)
	at java.base/java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1955)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.getCtSym(JRTUtil.java:133)
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:77)
	... 20 more
!SUBENTRY 1 org.eclipse.jdt.core 4 2 2023-11-25 06:14:46.582
!MESSAGE Error reading last build state for project ProyectoCeramica
!STACK 1
org.eclipse.core.runtime.CoreException: Failed to init ct.sym for E:\backup\Documentos\T1BL ECLIPSE\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\jrt-fs.jar
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:79)
	at org.eclipse.jdt.internal.core.builder.ClasspathLocation.forJrtSystem(ClasspathLocation.java:147)
	at org.eclipse.jdt.internal.core.builder.State.readBinaryLocations(State.java:369)
	at org.eclipse.jdt.internal.core.builder.State.read(State.java:260)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.readState(JavaBuilder.java:161)
	at org.eclipse.jdt.internal.core.JavaModelManager.readState(JavaModelManager.java:4153)
	at org.eclipse.jdt.internal.core.JavaModelManager.getLastBuiltState(JavaModelManager.java:2287)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.getLastState(JavaBuilder.java:456)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:189)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:845)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:228)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:276)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:329)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:332)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:384)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:405)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:154)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: java.io.FileNotFoundException: File E:\backup\Documentos\T1BL ECLIPSE\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\ct.sym does not exist
	at org.eclipse.jdt.internal.compiler.util.CtSym.init(CtSym.java:126)
	at org.eclipse.jdt.internal.compiler.util.CtSym.<init>(CtSym.java:120)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.lambda$1(JRTUtil.java:136)
	at java.base/java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1955)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.getCtSym(JRTUtil.java:133)
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:77)
	... 20 more
!SUBENTRY 2 org.eclipse.jdt.core 4 0 2023-11-25 06:14:46.582
!MESSAGE Failed to init ct.sym for E:\backup\Documentos\T1BL ECLIPSE\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\jrt-fs.jar
!STACK 0
java.io.FileNotFoundException: File E:\backup\Documentos\T1BL ECLIPSE\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\ct.sym does not exist
	at org.eclipse.jdt.internal.compiler.util.CtSym.init(CtSym.java:126)
	at org.eclipse.jdt.internal.compiler.util.CtSym.<init>(CtSym.java:120)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.lambda$1(JRTUtil.java:136)
	at java.base/java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1955)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.getCtSym(JRTUtil.java:133)
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:77)
	at org.eclipse.jdt.internal.core.builder.ClasspathLocation.forJrtSystem(ClasspathLocation.java:147)
	at org.eclipse.jdt.internal.core.builder.State.readBinaryLocations(State.java:369)
	at org.eclipse.jdt.internal.core.builder.State.read(State.java:260)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.readState(JavaBuilder.java:161)
	at org.eclipse.jdt.internal.core.JavaModelManager.readState(JavaModelManager.java:4153)
	at org.eclipse.jdt.internal.core.JavaModelManager.getLastBuiltState(JavaModelManager.java:2287)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.getLastState(JavaBuilder.java:456)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:189)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:845)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:228)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:276)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:329)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:332)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:384)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:405)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:154)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-25 06:14:46.609
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\User'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.debug.ui 4 120 2023-11-25 06:21:42.942
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.FutureTask.awaitDone(FutureTask.java:418)
	at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:203)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.runInUIThreadWithTimeout(SelectedResourceManager.java:262)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getFromUI(SelectedResourceManager.java:240)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getActiveWindow(SelectedResourceManager.java:231)
	at org.eclipse.debug.ui.DebugUITools.getDebugContext(DebugUITools.java:247)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getFrame(JavaDebugHover.java:97)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo2(JavaDebugHover.java:251)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.debug.ui 4 120 2023-11-25 07:05:19.901
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.FutureTask.awaitDone(FutureTask.java:418)
	at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:203)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.runInUIThreadWithTimeout(SelectedResourceManager.java:262)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getFromUI(SelectedResourceManager.java:240)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getActiveWindow(SelectedResourceManager.java:231)
	at org.eclipse.debug.ui.DebugUITools.getDebugContext(DebugUITools.java:247)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getFrame(JavaDebugHover.java:97)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo2(JavaDebugHover.java:251)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SESSION 2023-11-25 08:53:44.574 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_PE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-11-25 08:54:54.021
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-11-25 08:54:54.021
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2d705998,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@28a3fc34,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-11-25 08:55:17.133
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\wilde'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 08:55:21.183
!MESSAGE Exception while reading last build state for: P/ProyectoCeramica
!STACK 1
org.eclipse.core.runtime.CoreException: Error reading last build state for project ProyectoCeramica
	at org.eclipse.jdt.internal.core.JavaModelManager.readState(JavaModelManager.java:4161)
	at org.eclipse.jdt.internal.core.JavaModelManager.getLastBuiltState(JavaModelManager.java:2287)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.getLastState(JavaBuilder.java:456)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:189)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:845)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:228)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:276)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:329)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:332)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:384)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:405)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:154)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: org.eclipse.core.runtime.CoreException: Failed to init ct.sym for C:\Users\User\Downloads\apps\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\jrt-fs.jar
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:79)
	at org.eclipse.jdt.internal.core.builder.ClasspathLocation.forJrtSystem(ClasspathLocation.java:147)
	at org.eclipse.jdt.internal.core.builder.State.readBinaryLocations(State.java:369)
	at org.eclipse.jdt.internal.core.builder.State.read(State.java:260)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.readState(JavaBuilder.java:161)
	at org.eclipse.jdt.internal.core.JavaModelManager.readState(JavaModelManager.java:4153)
	... 15 more
Caused by: java.io.FileNotFoundException: File C:\Users\User\Downloads\apps\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\ct.sym does not exist
	at org.eclipse.jdt.internal.compiler.util.CtSym.init(CtSym.java:126)
	at org.eclipse.jdt.internal.compiler.util.CtSym.<init>(CtSym.java:120)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.lambda$1(JRTUtil.java:136)
	at java.base/java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1916)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.getCtSym(JRTUtil.java:133)
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:77)
	... 20 more
!SUBENTRY 1 org.eclipse.jdt.core 4 2 2023-11-25 08:55:21.183
!MESSAGE Error reading last build state for project ProyectoCeramica
!STACK 1
org.eclipse.core.runtime.CoreException: Failed to init ct.sym for C:\Users\User\Downloads\apps\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\jrt-fs.jar
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:79)
	at org.eclipse.jdt.internal.core.builder.ClasspathLocation.forJrtSystem(ClasspathLocation.java:147)
	at org.eclipse.jdt.internal.core.builder.State.readBinaryLocations(State.java:369)
	at org.eclipse.jdt.internal.core.builder.State.read(State.java:260)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.readState(JavaBuilder.java:161)
	at org.eclipse.jdt.internal.core.JavaModelManager.readState(JavaModelManager.java:4153)
	at org.eclipse.jdt.internal.core.JavaModelManager.getLastBuiltState(JavaModelManager.java:2287)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.getLastState(JavaBuilder.java:456)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:189)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:845)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:228)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:276)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:329)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:332)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:384)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:405)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:154)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: java.io.FileNotFoundException: File C:\Users\User\Downloads\apps\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\ct.sym does not exist
	at org.eclipse.jdt.internal.compiler.util.CtSym.init(CtSym.java:126)
	at org.eclipse.jdt.internal.compiler.util.CtSym.<init>(CtSym.java:120)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.lambda$1(JRTUtil.java:136)
	at java.base/java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1916)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.getCtSym(JRTUtil.java:133)
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:77)
	... 20 more
!SUBENTRY 2 org.eclipse.jdt.core 4 0 2023-11-25 08:55:21.183
!MESSAGE Failed to init ct.sym for C:\Users\User\Downloads\apps\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\jrt-fs.jar
!STACK 0
java.io.FileNotFoundException: File C:\Users\User\Downloads\apps\Eclipse-2020-12\eclipse\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.2.v20210201-0955\jre\lib\ct.sym does not exist
	at org.eclipse.jdt.internal.compiler.util.CtSym.init(CtSym.java:126)
	at org.eclipse.jdt.internal.compiler.util.CtSym.<init>(CtSym.java:120)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.lambda$1(JRTUtil.java:136)
	at java.base/java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1916)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.getCtSym(JRTUtil.java:133)
	at org.eclipse.jdt.internal.core.builder.ClasspathJrtWithReleaseOption.<init>(ClasspathJrtWithReleaseOption.java:77)
	at org.eclipse.jdt.internal.core.builder.ClasspathLocation.forJrtSystem(ClasspathLocation.java:147)
	at org.eclipse.jdt.internal.core.builder.State.readBinaryLocations(State.java:369)
	at org.eclipse.jdt.internal.core.builder.State.read(State.java:260)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.readState(JavaBuilder.java:161)
	at org.eclipse.jdt.internal.core.JavaModelManager.readState(JavaModelManager.java:4153)
	at org.eclipse.jdt.internal.core.JavaModelManager.getLastBuiltState(JavaModelManager.java:2287)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.getLastState(JavaBuilder.java:456)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:189)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:845)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:228)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:276)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:329)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:332)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:384)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:405)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:154)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.debug.ui 4 120 2023-11-25 09:36:16.831
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.FutureTask.awaitDone(FutureTask.java:418)
	at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:203)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.runInUIThreadWithTimeout(SelectedResourceManager.java:262)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getFromUI(SelectedResourceManager.java:240)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getActiveWindow(SelectedResourceManager.java:231)
	at org.eclipse.debug.ui.DebugUITools.getDebugContext(DebugUITools.java:247)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getFrame(JavaDebugHover.java:97)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo2(JavaDebugHover.java:251)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:53:48.699
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 * impcom / 100;
		} else if (cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 * impcom / 100;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 * impcom / 100;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 * impcom / 100;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-25 09:53:48.752
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-25 09:53:48.753
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:53:48.799
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 * impcom / 100;
		} else if (cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 * impcom / 100;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 * impcom / 100;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 * impcom / 100;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:53:48.802
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:53:48.803
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:53:49.397
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 * impcom / 100;
		} else if (cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 * impcom / 100;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 * impcom / 100;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 * impcom / 100;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:53:49.400
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:53:49.401
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:53:50.280
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 * impcom / 100;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 * impcom / 100;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 * impcom / 100;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 * impcom / 100;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-25 09:53:50.283
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-25 09:53:50.284
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:53:50.367
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 * impcom / 100;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 * impcom / 100;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 * impcom / 100;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 * impcom / 100;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:53:50.369
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:53:50.370
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:53:51.498
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 * impcom / 100;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 * impcom / 100;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 * impcom / 100;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 * impcom / 100;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:53:51.500
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:53:51.501
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:53:52.311
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje * impcom / 100;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 * impcom / 100;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 * impcom / 100;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 * impcom / 100;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-25 09:53:52.314
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-25 09:53:52.315
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:53:52.471
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje * impcom / 100;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 * impcom / 100;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 * impcom / 100;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 * impcom / 100;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:53:52.472
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:53:52.473
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:54:01.346
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 * impcom / 100;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 * impcom / 100;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 * impcom / 100;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 * impcom / 100;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-25 09:54:01.348
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-25 09:54:01.349
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:54:01.658
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 * impcom / 100;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 * impcom / 100;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 * impcom / 100;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 * impcom / 100;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:54:01.660
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:54:01.661
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:54:02.658
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 * impcom / 100;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 * impcom / 100;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 * impcom / 100;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 * impcom / 100;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:54:02.660
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:54:02.661
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:54:04.717
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 * impcom / 100;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 * impcom / 100;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 * impcom / 100;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 * impcom / 100;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:54:04.718
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:54:04.719
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:54:08.379
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 * impcom / 100;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 * impcom / 100;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 * impcom / 100;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-25 09:54:08.381
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-25 09:54:08.382
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:54:10.491
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 * impcom / 100;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 * impcom / 100;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 * impcom / 100;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:54:10.493
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:54:10.494
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:54:11.700
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 * impcom / 100;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 * impcom / 100;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 * impcom / 100;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:54:11.701
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:54:11.702
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:54:14.913
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 * impcom / 100;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 * impcom / 100;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-25 09:54:14.914
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-25 09:54:14.915
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:54:18.110
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 * impcom / 100;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 * impcom / 100;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:54:18.111
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:54:18.112
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:54:21.444
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 * impcom / 100;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-25 09:54:21.445
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-25 09:54:21.446
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:54:23.230
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 * impcom / 100;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:54:23.232
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:54:23.233
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:54:25.470
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 / 100 * impcom;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-25 09:54:25.473
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-25 09:54:25.474
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:54:26.877
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 / 100 * impcom;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:54:26.879
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:54:26.880
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:55:17.304
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 / 100 * impcom;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:55:17.305
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:55:17.306
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:55:17.363
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 / 100 * impcom;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:55:17.365
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:55:17.366
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:55:17.577
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 / 100 * impcom;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:55:17.579
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:55:17.580
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:55:18.846
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 / 100 * impcom;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:55:18.848
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:55:18.849
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:55:18.883
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 / 100 * impcom;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:55:18.884
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:55:18.886
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:55:19.229
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 / 100 * impcom;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:55:19.231
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:55:19.232
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:55:30.087
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 / 100 * impcom;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-25 09:55:30.089
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-25 09:55:30.090
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:55:36.656
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 / 100 * impcom;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:55:36.658
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:55:36.658
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:55:38.593
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 / 100 * impcom;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:55:38.594
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:55:38.595
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:55:41.719
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 / 100 * impcom;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:55:41.721
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:55:41.722
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:55:41.800
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 / 100 * impcom;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:55:41.802
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:55:41.803
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:55:44.020
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 / 100 * impcom;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:55:44.023
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:55:44.024
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:55:44.050
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 / 100 * impcom;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui 4 0 2023-11-25 09:55:44.052
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:55:44.155
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 / 100 * impcom;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:55:44.156
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:55:44.157
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:55:57.029
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 / 100 * impcom;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:55:57.030
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:55:57.031
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:55:57.066
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 / 100 * impcom;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:55:57.068
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:55:57.069
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:55:57.435
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = (Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 / 100 * impcom;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:55:57.437
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:55:57.438
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:55:58.639
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 / 100 * impcom;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-25 09:55:58.640
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-25 09:55:58.641
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:55:59.059
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 / 100 * impcom;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:55:59.061
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:55:59.062
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:56:09.243
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 / 100 * impcom;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-25 09:56:09.244
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-25 09:56:09.245
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:56:09.275
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 / 100 * impcom;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:56:09.277
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:56:09.278
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:56:11.672
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 / 100 * impcom;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 09:56:11.673
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 09:56:11.674
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 09:56:11.695
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class VenderCeramico extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JComboBox cboModelo;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JButton btnVender;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VenderCeramico dialog = new VenderCeramico();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public VenderCeramico() {
		setTitle("Vender");
		setBounds(100, 100, 487, 391);
		getContentPane().setLayout(null);

		lblModelo = new JLabel("Modelo");
		lblModelo.setBounds(10, 11, 84, 14);
		getContentPane().add(lblModelo);

		lblPrecio = new JLabel("Precio (S/.)");
		lblPrecio.setBounds(10, 36, 84, 14);
		getContentPane().add(lblPrecio);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 61, 84, 14);
		getContentPane().add(lblCantidad);

		cboModelo = new JComboBox();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel(
				new String[] { "Cinza Plus", "Luxury", "Austria", "Yungay Mix", "Thal\u00EDa" }));
		cboModelo.setBounds(104, 7, 204, 22);
		getContentPane().add(cboModelo);

		txtPrecio = new JTextField();
		txtPrecio.setEditable(false);
		txtPrecio.setBounds(104, 33, 204, 20);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(104, 58, 204, 20);
		getContentPane().add(txtCantidad);
		txtCantidad.setColumns(10);

		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setBounds(372, 7, 89, 23);
		getContentPane().add(btnVender);

		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(372, 32, 89, 23);
		getContentPane().add(btnCerrar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 99, 451, 242);
		getContentPane().add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}

	// =================================================

	protected void actionPerformedCboModelo(ActionEvent e) {

		int modelo = cboModelo.getSelectedIndex();

		switch (modelo) {
		case 0:
			txtPrecio.setText("" + Tienda.precio0);
			break;
		case 1:
			txtPrecio.setText("" + Tienda.precio1);
			break;
		case 2:
			txtPrecio.setText("" + Tienda.precio2);
			break;
		case 3:
			txtPrecio.setText("" + Tienda.precio3);
			break;
		case 4:
			txtPrecio.setText("" + Tienda.precio4);
			break;
		}
	}

	// proceso del boton vender
	// =======================================================

	// leer modelo
	int leerModelo() {
		int modelo = cboModelo.getSelectedIndex();
		return modelo;
	}

	// leer cantidad
	int leerCantidad() {
		int cantidad = Integer.parseInt(txtCantidad.getText());
		return cantidad;
	}

	// leer precio
	double leerPrecio() {
		double precio = Double.parseDouble(txtPrecio.getText());
		return precio;
	}

	// calcular importe compra
	double calcularCompra(int cantidad, double precio) {
		double impcom = 0;
		impcom = precio * cantidad;
		return impcom;
	}

	// calcular el descuento

	double calcularDescuento(int cantidad, double impcom) {
		double impdes = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			impdes = Tienda.porcentaje1 / 100 * impcom;
		} else if cantidad >= 6 && cantidad <= 10 {
			impdes = (Tienda.porcentaje2 / 100 * impcom;
		} else if cantidad >= 11 && cantidad <= 15) {
			impdes = (Tienda.porcentaje3 / 100 * impcom;
		} else if cantidad > 15) {
			impdes = Tienda.porcentaje4 / 100 * impcom;
		}

		return impdes;
	}

	// calcular importe a pagar
	double calcularImportePagar(double impcom, double impdes) {
		double imppag = 0;
		imppag = impcom - impdes;
		return imppag;
	}

	// nombre del modelo
	String nombreModelo(int modelo) {
		String nommodel = "";
		switch (modelo) {
		case 0:
			nommodel = Tienda.modelo0;
			break;
		case 1:
			nommodel = Tienda.modelo1;
			break;
		case 2:
			nommodel = Tienda.modelo2;
			break;
		case 3:
			nommodel = Tienda.modelo3;
			break;
		case 4:
			nommodel = Tienda.modelo4;
			break;
		}
		return nommodel;
	}

	// calcular cantidad de obsequio
	int calcularObsequio(int cantidad) {
		int obsequio = 0;
		if (cantidad >= 1 && cantidad <= 5) {
			obsequio = Tienda.obsequioCantidad1 * cantidad;
		} else if (cantidad >= 6 && cantidad <= 10) {
			obsequio = Tienda.obsequioCantidad2 * cantidad;
		} else if (cantidad > 10) {
			obsequio = Tienda.obsequioCantidad3 * cantidad;
		}
		return obsequio;
	}

	// imprimir los resultados
	void mostrarResultados(String nommodelo, double precio, int cantidad, double impcom, double impdes, double imppag,
			String nomobsequio, int canobsequio) {
		txtS.setText("BOLETA DE VENTAS\n\n");
		imprimir("Modelo              : " + nommodelo);
		imprimir("Precio              : S/." + String.format("%,10.2f", precio));
		imprimir("Cantidad adquirida  : " + cantidad);
		imprimir("Importe de compra   : S/." + String.format("%,10.2f", impcom));
		imprimir("Importe descuento   : S/." + String.format("%,10.2f", impdes));
		imprimir("Importe pagar       : S/." + String.format("%,10.2f", imppag));
		imprimir("Tipo de obsequio    : " + nomobsequio);
		imprimir("unidades de obsequio: " + canobsequio);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}


	protected void actionPerformedBtnVender(ActionEvent e) {

		String nommodelo, nomobsequio;
		int cantidad, canobsequio, modelo, contadorto;
		double precio, impcom, impdes = 0, imppag;

		modelo = leerModelo();
		cantidad = leerCantidad();
		precio = leerPrecio();
		nommodelo = nombreModelo(modelo);

		impcom = calcularCompra(cantidad, precio);
		impdes = calcularDescuento(cantidad, impcom);
		imppag = calcularImportePagar(impcom, impdes);
		nommodelo = nombreModelo(modelo);
		canobsequio = calcularObsequio(cantidad);
		nomobsequio = Tienda.tipoObsequio;

		contAcum(modelo, imppag, cantidad);
		contAcumTotal(imppag);

		mostrarMensajeEnPantalla();
		mostrarResultados(nommodelo, precio, cantidad, impcom, impdes, imppag, nomobsequio, canobsequio);

	}

	void contAcum(int modelo, double impPagar, int cant) {
		switch (modelo) {
		case 0:
			Tienda.contadorVenta0++;
			Tienda.importeAcumulado0 += impPagar;
			Tienda.porcentajeCuota0 = (Tienda.importeAcumulado0 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas0 += cant;
			break;
		case 1:
			Tienda.contadorVenta1++;
			Tienda.importeAcumulado1 += impPagar;
			Tienda.porcentajeCuota1 = (Tienda.importeAcumulado1 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas1 += cant;
			break;
		case 2:
			Tienda.contadorVenta2++;
			Tienda.importeAcumulado2 += impPagar;
			Tienda.porcentajeCuota2 = (Tienda.importeAcumulado2 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas2 += cant;
			break;
		case 3:
			Tienda.contadorVenta3++;
			Tienda.importeAcumulado3 += impPagar;
			Tienda.porcentajeCuota3 = (Tienda.importeAcumulado3 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas3 += cant;
			break;
		default:
			Tienda.contadorVenta4++;
			Tienda.importeAcumulado4 += impPagar;
			Tienda.porcentajeCuota4 = (Tienda.importeAcumulado4 / Tienda.cuotaDiaria) * 100;
			Tienda.cantUniVendidas4 += cant;
			break;
		}
	}

	// acamular cada 5 ventas
	void contAcumTotal(double imppag) {
		Tienda.contadorVentaTotal++;
		Tienda.importeAcumuladoTotal += imppag;
		Tienda.porcentajeCuotaTotal += (imppag / Tienda.cuotaDiaria) * 100;
	}

	void mostrarMensajeEnPantalla() {
		if (Tienda.contadorVentaTotal % 5 == 0) {
			JOptionPane.showMessageDialog(null,
					"Ventas Nro. " + Tienda.contadorVentaTotal + "\n" + "Importe total general acumulado: S/. "
							+ Math.round(Tienda.importeAcumuladoTotal * 100.0) / 100.0 + "\n"
							+ "Porcentaje de la cuota diaria: "
							+ Math.round(Tienda.porcentajeCuotaTotal * 100.0) / 100.0 + "%",
					"Avance de ventas", 1);
		}
	}

	protected void actionPerformedBtnCerrar(ActionEvent e) {

		dispose();

	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui 4 0 2023-11-25 09:56:11.696
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.debug.ui 4 120 2023-11-25 10:12:40.878
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.FutureTask.awaitDone(FutureTask.java:418)
	at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:203)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.runInUIThreadWithTimeout(SelectedResourceManager.java:262)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getFromUI(SelectedResourceManager.java:240)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getActiveWindow(SelectedResourceManager.java:231)
	at org.eclipse.debug.ui.DebugUITools.getDebugContext(DebugUITools.java:247)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getFrame(JavaDebugHover.java:97)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo2(JavaDebugHover.java:251)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.debug.ui 4 120 2023-11-25 11:17:01.007
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.FutureTask.awaitDone(FutureTask.java:418)
	at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:203)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.runInUIThreadWithTimeout(SelectedResourceManager.java:262)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getFromUI(SelectedResourceManager.java:240)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getActiveWindow(SelectedResourceManager.java:231)
	at org.eclipse.debug.ui.DebugUITools.getDebugContext(DebugUITools.java:247)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getFrame(JavaDebugHover.java:97)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo2(JavaDebugHover.java:251)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.debug.ui 4 120 2023-11-25 12:15:40.149
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.FutureTask.awaitDone(FutureTask.java:418)
	at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:203)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.runInUIThreadWithTimeout(SelectedResourceManager.java:262)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getFromUI(SelectedResourceManager.java:240)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getActiveWindow(SelectedResourceManager.java:231)
	at org.eclipse.debug.ui.DebugUITools.getDebugContext(DebugUITools.java:247)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getFrame(JavaDebugHover.java:97)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo2(JavaDebugHover.java:251)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 12:40:48.967
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.BorderLayout;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.awt.event.ActionEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;

public class GenerarReporte extends JDialog implements ActionListener {

	private final JPanel contentPanel = new JPanel();
	private JLabel lblTipo;
	private JComboBox cboTipo;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			GenerarReporte dialog = new GenerarReporte();
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Create the dialog.
	 */
	public GenerarReporte() {
		setTitle("Generar Reportes");
		setFont(new Font("Monospaced", Font.PLAIN, 13));
		setBounds(100, 100, 603, 302);
		getContentPane().setLayout(new BorderLayout());
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel, BorderLayout.CENTER);
		contentPanel.setLayout(null);
		
		lblTipo = new JLabel("Tipo de Reporte");
		lblTipo.setBounds(10, 12, 99, 25);
		contentPanel.add(lblTipo);
		
		cboTipo = new JComboBox();
		cboTipo.addActionListener(this);
		cboTipo.setModel(new DefaultComboBoxModel(new String[] {"Ventas por modelo", "Comparaci\u00F3n de precio con el precio promedio", "Comparaci\u00F3n de cajas vendidas con la cantidad \u00F3ptima", "Estadistica sobre el precio"}));
		cboTipo.setBounds(107, 12, 328, 25);
		contentPanel.add(cboTipo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(488, 14, 89, 23);
		contentPanel.add(btnCerrar);
		
		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 57, 567, 195);
		contentPanel.add(scrollPane);
		
		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);
	}
	//Variables

	
	//Fin
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == cboTipo) {
			actionPerformedCboTipo(e);
		}
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
	
	
	// varibles globale
	double precioprom = (Tienda.precio0 + Tienda.precio1 + Tienda.precio2 + Tienda.precio3 + Tienda.precio4)/5;
	double anchoprom = (Tienda.ancho0 + Tienda.ancho1 + Tienda.ancho2 + Tienda.ancho3 + Tienda.ancho4)/5;
	
	DecimalFormat formato1 = new DecimalFormat("0.00");
	//tipo de reporte del cbo}
	
	void tipoReporte() {
		// String tipoReporte = cboTipo.getSelectedItem().toString();
		
		int tipo = cboTipo.getSelectedIndex();
				
		 switch (tipo) {
	        case 0:
	            generarReporteVentasPorModelo();
	            break;
	        case 1:
	            generarReporteComparacionPrecio();
	            break;
	        case 2:
	            generarReporteComparacionCajas();
	            break;
	        case 3:
	            generarReporteEstadisticaPrecio();
	            break;
		 }
	}
	
	//generar reporte por modelo
	void generarReporteVentasPorModelo() {
		
		
		txtS.setText("VENTAS POR MODELO \n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo0 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta0 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas0 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado0) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota0) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo1 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta1 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas1 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado1) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota1) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo2 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta2 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas2 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado2) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota2) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo3 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta3 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas3 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado3) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota3) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo4 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta4 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas4 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado4) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota4) + "%\n\n");
	
		 txtS.setCaretPosition(0);
	}
	
	//generar reporte comparación precio con precio promedio
	void generarReporteComparacionPrecio() {
		
		txtS.setText("COMPARACIÓN DE PRECIOS CON EL PRECIO PROMEDIO\n\n" );
		
		txtS.append("Modelo : " + Tienda.modelo0 + "\n");
		txtS.append("Precio : S/. " + Tienda.precio0 + "\n");
		txtS.append("Precio promedio : S/. " + precioprom + "\n");
		if(Tienda.precio0 < precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}else if(Tienda.precio0 < precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}else(Tienda.precio0 < precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}
			 
	}
	
	//generar reporte comparacion cajas vendidas con cantidad optima
	void generarReporteComparacionCajas() {
			 
	}
	
	// estadisticas sobre el precio
	void generarReporteEstadisticaPrecio(){
			 
		 }
	
	protected void actionPerformedCboTipo(ActionEvent e) {
		
		tipoReporte();
		
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-25 12:40:48.969
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-25 12:40:48.970
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 12:40:48.998
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.BorderLayout;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.awt.event.ActionEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;

public class GenerarReporte extends JDialog implements ActionListener {

	private final JPanel contentPanel = new JPanel();
	private JLabel lblTipo;
	private JComboBox cboTipo;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			GenerarReporte dialog = new GenerarReporte();
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Create the dialog.
	 */
	public GenerarReporte() {
		setTitle("Generar Reportes");
		setFont(new Font("Monospaced", Font.PLAIN, 13));
		setBounds(100, 100, 603, 302);
		getContentPane().setLayout(new BorderLayout());
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel, BorderLayout.CENTER);
		contentPanel.setLayout(null);
		
		lblTipo = new JLabel("Tipo de Reporte");
		lblTipo.setBounds(10, 12, 99, 25);
		contentPanel.add(lblTipo);
		
		cboTipo = new JComboBox();
		cboTipo.addActionListener(this);
		cboTipo.setModel(new DefaultComboBoxModel(new String[] {"Ventas por modelo", "Comparaci\u00F3n de precio con el precio promedio", "Comparaci\u00F3n de cajas vendidas con la cantidad \u00F3ptima", "Estadistica sobre el precio"}));
		cboTipo.setBounds(107, 12, 328, 25);
		contentPanel.add(cboTipo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(488, 14, 89, 23);
		contentPanel.add(btnCerrar);
		
		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 57, 567, 195);
		contentPanel.add(scrollPane);
		
		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);
	}
	//Variables

	
	//Fin
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == cboTipo) {
			actionPerformedCboTipo(e);
		}
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
	
	
	// varibles globale
	double precioprom = (Tienda.precio0 + Tienda.precio1 + Tienda.precio2 + Tienda.precio3 + Tienda.precio4)/5;
	double anchoprom = (Tienda.ancho0 + Tienda.ancho1 + Tienda.ancho2 + Tienda.ancho3 + Tienda.ancho4)/5;
	
	DecimalFormat formato1 = new DecimalFormat("0.00");
	//tipo de reporte del cbo}
	
	void tipoReporte() {
		// String tipoReporte = cboTipo.getSelectedItem().toString();
		
		int tipo = cboTipo.getSelectedIndex();
				
		 switch (tipo) {
	        case 0:
	            generarReporteVentasPorModelo();
	            break;
	        case 1:
	            generarReporteComparacionPrecio();
	            break;
	        case 2:
	            generarReporteComparacionCajas();
	            break;
	        case 3:
	            generarReporteEstadisticaPrecio();
	            break;
		 }
	}
	
	//generar reporte por modelo
	void generarReporteVentasPorModelo() {
		
		
		txtS.setText("VENTAS POR MODELO \n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo0 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta0 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas0 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado0) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota0) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo1 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta1 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas1 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado1) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota1) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo2 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta2 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas2 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado2) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota2) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo3 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta3 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas3 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado3) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota3) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo4 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta4 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas4 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado4) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota4) + "%\n\n");
	
		 txtS.setCaretPosition(0);
	}
	
	//generar reporte comparación precio con precio promedio
	void generarReporteComparacionPrecio() {
		
		txtS.setText("COMPARACIÓN DE PRECIOS CON EL PRECIO PROMEDIO\n\n" );
		
		txtS.append("Modelo : " + Tienda.modelo0 + "\n");
		txtS.append("Precio : S/. " + Tienda.precio0 + "\n");
		txtS.append("Precio promedio : S/. " + precioprom + "\n");
		if(Tienda.precio0 < precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}else if(Tienda.precio0 < precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}else(Tienda.precio0 < precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}
			 
	}
	
	//generar reporte comparacion cajas vendidas con cantidad optima
	void generarReporteComparacionCajas() {
			 
	}
	
	// estadisticas sobre el precio
	void generarReporteEstadisticaPrecio(){
			 
		 }
	
	protected void actionPerformedCboTipo(ActionEvent e) {
		
		tipoReporte();
		
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 12:40:49.000
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 12:40:49.001
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 12:40:51.341
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.BorderLayout;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.awt.event.ActionEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;

public class GenerarReporte extends JDialog implements ActionListener {

	private final JPanel contentPanel = new JPanel();
	private JLabel lblTipo;
	private JComboBox cboTipo;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			GenerarReporte dialog = new GenerarReporte();
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Create the dialog.
	 */
	public GenerarReporte() {
		setTitle("Generar Reportes");
		setFont(new Font("Monospaced", Font.PLAIN, 13));
		setBounds(100, 100, 603, 302);
		getContentPane().setLayout(new BorderLayout());
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel, BorderLayout.CENTER);
		contentPanel.setLayout(null);
		
		lblTipo = new JLabel("Tipo de Reporte");
		lblTipo.setBounds(10, 12, 99, 25);
		contentPanel.add(lblTipo);
		
		cboTipo = new JComboBox();
		cboTipo.addActionListener(this);
		cboTipo.setModel(new DefaultComboBoxModel(new String[] {"Ventas por modelo", "Comparaci\u00F3n de precio con el precio promedio", "Comparaci\u00F3n de cajas vendidas con la cantidad \u00F3ptima", "Estadistica sobre el precio"}));
		cboTipo.setBounds(107, 12, 328, 25);
		contentPanel.add(cboTipo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(488, 14, 89, 23);
		contentPanel.add(btnCerrar);
		
		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 57, 567, 195);
		contentPanel.add(scrollPane);
		
		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);
	}
	//Variables

	
	//Fin
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == cboTipo) {
			actionPerformedCboTipo(e);
		}
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
	
	
	// varibles globale
	double precioprom = (Tienda.precio0 + Tienda.precio1 + Tienda.precio2 + Tienda.precio3 + Tienda.precio4)/5;
	double anchoprom = (Tienda.ancho0 + Tienda.ancho1 + Tienda.ancho2 + Tienda.ancho3 + Tienda.ancho4)/5;
	
	DecimalFormat formato1 = new DecimalFormat("0.00");
	//tipo de reporte del cbo}
	
	void tipoReporte() {
		// String tipoReporte = cboTipo.getSelectedItem().toString();
		
		int tipo = cboTipo.getSelectedIndex();
				
		 switch (tipo) {
	        case 0:
	            generarReporteVentasPorModelo();
	            break;
	        case 1:
	            generarReporteComparacionPrecio();
	            break;
	        case 2:
	            generarReporteComparacionCajas();
	            break;
	        case 3:
	            generarReporteEstadisticaPrecio();
	            break;
		 }
	}
	
	//generar reporte por modelo
	void generarReporteVentasPorModelo() {
		
		
		txtS.setText("VENTAS POR MODELO \n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo0 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta0 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas0 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado0) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota0) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo1 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta1 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas1 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado1) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota1) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo2 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta2 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas2 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado2) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota2) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo3 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta3 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas3 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado3) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota3) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo4 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta4 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas4 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado4) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota4) + "%\n\n");
	
		 txtS.setCaretPosition(0);
	}
	
	//generar reporte comparación precio con precio promedio
	void generarReporteComparacionPrecio() {
		
		txtS.setText("COMPARACIÓN DE PRECIOS CON EL PRECIO PROMEDIO\n\n" );
		
		txtS.append("Modelo : " + Tienda.modelo0 + "\n");
		txtS.append("Precio : S/. " + Tienda.precio0 + "\n");
		txtS.append("Precio promedio : S/. " + precioprom + "\n");
		if(Tienda.precio0 < precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}else if(Tienda.precio0 < precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}else(Tienda.precio0 < precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}
			 
	}
	
	//generar reporte comparacion cajas vendidas con cantidad optima
	void generarReporteComparacionCajas() {
			 
	}
	
	// estadisticas sobre el precio
	void generarReporteEstadisticaPrecio(){
			 
		 }
	
	protected void actionPerformedCboTipo(ActionEvent e) {
		
		tipoReporte();
		
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 12:40:51.344
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 12:40:51.345
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 12:40:51.372
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.BorderLayout;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.awt.event.ActionEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;

public class GenerarReporte extends JDialog implements ActionListener {

	private final JPanel contentPanel = new JPanel();
	private JLabel lblTipo;
	private JComboBox cboTipo;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			GenerarReporte dialog = new GenerarReporte();
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Create the dialog.
	 */
	public GenerarReporte() {
		setTitle("Generar Reportes");
		setFont(new Font("Monospaced", Font.PLAIN, 13));
		setBounds(100, 100, 603, 302);
		getContentPane().setLayout(new BorderLayout());
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel, BorderLayout.CENTER);
		contentPanel.setLayout(null);
		
		lblTipo = new JLabel("Tipo de Reporte");
		lblTipo.setBounds(10, 12, 99, 25);
		contentPanel.add(lblTipo);
		
		cboTipo = new JComboBox();
		cboTipo.addActionListener(this);
		cboTipo.setModel(new DefaultComboBoxModel(new String[] {"Ventas por modelo", "Comparaci\u00F3n de precio con el precio promedio", "Comparaci\u00F3n de cajas vendidas con la cantidad \u00F3ptima", "Estadistica sobre el precio"}));
		cboTipo.setBounds(107, 12, 328, 25);
		contentPanel.add(cboTipo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(488, 14, 89, 23);
		contentPanel.add(btnCerrar);
		
		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 57, 567, 195);
		contentPanel.add(scrollPane);
		
		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);
	}
	//Variables

	
	//Fin
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == cboTipo) {
			actionPerformedCboTipo(e);
		}
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
	
	
	// varibles globale
	double precioprom = (Tienda.precio0 + Tienda.precio1 + Tienda.precio2 + Tienda.precio3 + Tienda.precio4)/5;
	double anchoprom = (Tienda.ancho0 + Tienda.ancho1 + Tienda.ancho2 + Tienda.ancho3 + Tienda.ancho4)/5;
	
	DecimalFormat formato1 = new DecimalFormat("0.00");
	//tipo de reporte del cbo}
	
	void tipoReporte() {
		// String tipoReporte = cboTipo.getSelectedItem().toString();
		
		int tipo = cboTipo.getSelectedIndex();
				
		 switch (tipo) {
	        case 0:
	            generarReporteVentasPorModelo();
	            break;
	        case 1:
	            generarReporteComparacionPrecio();
	            break;
	        case 2:
	            generarReporteComparacionCajas();
	            break;
	        case 3:
	            generarReporteEstadisticaPrecio();
	            break;
		 }
	}
	
	//generar reporte por modelo
	void generarReporteVentasPorModelo() {
		
		
		txtS.setText("VENTAS POR MODELO \n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo0 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta0 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas0 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado0) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota0) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo1 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta1 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas1 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado1) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota1) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo2 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta2 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas2 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado2) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota2) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo3 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta3 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas3 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado3) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota3) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo4 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta4 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas4 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado4) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota4) + "%\n\n");
	
		 txtS.setCaretPosition(0);
	}
	
	//generar reporte comparación precio con precio promedio
	void generarReporteComparacionPrecio() {
		
		txtS.setText("COMPARACIÓN DE PRECIOS CON EL PRECIO PROMEDIO\n\n" );
		
		txtS.append("Modelo : " + Tienda.modelo0 + "\n");
		txtS.append("Precio : S/. " + Tienda.precio0 + "\n");
		txtS.append("Precio promedio : S/. " + precioprom + "\n");
		if(Tienda.precio0 < precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}else if(Tienda.precio0 < precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}else(Tienda.precio0 < precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}
			 
	}
	
	//generar reporte comparacion cajas vendidas con cantidad optima
	void generarReporteComparacionCajas() {
			 
	}
	
	// estadisticas sobre el precio
	void generarReporteEstadisticaPrecio(){
			 
		 }
	
	protected void actionPerformedCboTipo(ActionEvent e) {
		
		tipoReporte();
		
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 12:40:51.374
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 12:40:51.375
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 12:40:56.067
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.BorderLayout;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.awt.event.ActionEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;

public class GenerarReporte extends JDialog implements ActionListener {

	private final JPanel contentPanel = new JPanel();
	private JLabel lblTipo;
	private JComboBox cboTipo;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			GenerarReporte dialog = new GenerarReporte();
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Create the dialog.
	 */
	public GenerarReporte() {
		setTitle("Generar Reportes");
		setFont(new Font("Monospaced", Font.PLAIN, 13));
		setBounds(100, 100, 603, 302);
		getContentPane().setLayout(new BorderLayout());
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel, BorderLayout.CENTER);
		contentPanel.setLayout(null);
		
		lblTipo = new JLabel("Tipo de Reporte");
		lblTipo.setBounds(10, 12, 99, 25);
		contentPanel.add(lblTipo);
		
		cboTipo = new JComboBox();
		cboTipo.addActionListener(this);
		cboTipo.setModel(new DefaultComboBoxModel(new String[] {"Ventas por modelo", "Comparaci\u00F3n de precio con el precio promedio", "Comparaci\u00F3n de cajas vendidas con la cantidad \u00F3ptima", "Estadistica sobre el precio"}));
		cboTipo.setBounds(107, 12, 328, 25);
		contentPanel.add(cboTipo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(488, 14, 89, 23);
		contentPanel.add(btnCerrar);
		
		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 57, 567, 195);
		contentPanel.add(scrollPane);
		
		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);
	}
	//Variables

	
	//Fin
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == cboTipo) {
			actionPerformedCboTipo(e);
		}
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
	
	
	// varibles globale
	double precioprom = (Tienda.precio0 + Tienda.precio1 + Tienda.precio2 + Tienda.precio3 + Tienda.precio4)/5;
	double anchoprom = (Tienda.ancho0 + Tienda.ancho1 + Tienda.ancho2 + Tienda.ancho3 + Tienda.ancho4)/5;
	
	DecimalFormat formato1 = new DecimalFormat("0.00");
	//tipo de reporte del cbo}
	
	void tipoReporte() {
		// String tipoReporte = cboTipo.getSelectedItem().toString();
		
		int tipo = cboTipo.getSelectedIndex();
				
		 switch (tipo) {
	        case 0:
	            generarReporteVentasPorModelo();
	            break;
	        case 1:
	            generarReporteComparacionPrecio();
	            break;
	        case 2:
	            generarReporteComparacionCajas();
	            break;
	        case 3:
	            generarReporteEstadisticaPrecio();
	            break;
		 }
	}
	
	//generar reporte por modelo
	void generarReporteVentasPorModelo() {
		
		
		txtS.setText("VENTAS POR MODELO \n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo0 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta0 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas0 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado0) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota0) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo1 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta1 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas1 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado1) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota1) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo2 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta2 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas2 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado2) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota2) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo3 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta3 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas3 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado3) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota3) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo4 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta4 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas4 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado4) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota4) + "%\n\n");
	
		 txtS.setCaretPosition(0);
	}
	
	//generar reporte comparación precio con precio promedio
	void generarReporteComparacionPrecio() {
		
		txtS.setText("COMPARACIÓN DE PRECIOS CON EL PRECIO PROMEDIO\n\n" );
		
		txtS.append("Modelo : " + Tienda.modelo0 + "\n");
		txtS.append("Precio : S/. " + Tienda.precio0 + "\n");
		txtS.append("Precio promedio : S/. " + precioprom + "\n");
		if(Tienda.precio0 < precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}else if(Tienda.precio0 < precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}else(Tienda.precio0 < precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}
			 
	}
	
	//generar reporte comparacion cajas vendidas con cantidad optima
	void generarReporteComparacionCajas() {
			 
	}
	
	// estadisticas sobre el precio
	void generarReporteEstadisticaPrecio(){
			 
		 }
	
	protected void actionPerformedCboTipo(ActionEvent e) {
		
		tipoReporte();
		
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 12:40:56.068
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 12:40:56.069
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 12:40:57.498
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.BorderLayout;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.awt.event.ActionEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;

public class GenerarReporte extends JDialog implements ActionListener {

	private final JPanel contentPanel = new JPanel();
	private JLabel lblTipo;
	private JComboBox cboTipo;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			GenerarReporte dialog = new GenerarReporte();
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Create the dialog.
	 */
	public GenerarReporte() {
		setTitle("Generar Reportes");
		setFont(new Font("Monospaced", Font.PLAIN, 13));
		setBounds(100, 100, 603, 302);
		getContentPane().setLayout(new BorderLayout());
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel, BorderLayout.CENTER);
		contentPanel.setLayout(null);
		
		lblTipo = new JLabel("Tipo de Reporte");
		lblTipo.setBounds(10, 12, 99, 25);
		contentPanel.add(lblTipo);
		
		cboTipo = new JComboBox();
		cboTipo.addActionListener(this);
		cboTipo.setModel(new DefaultComboBoxModel(new String[] {"Ventas por modelo", "Comparaci\u00F3n de precio con el precio promedio", "Comparaci\u00F3n de cajas vendidas con la cantidad \u00F3ptima", "Estadistica sobre el precio"}));
		cboTipo.setBounds(107, 12, 328, 25);
		contentPanel.add(cboTipo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(488, 14, 89, 23);
		contentPanel.add(btnCerrar);
		
		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 57, 567, 195);
		contentPanel.add(scrollPane);
		
		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);
	}
	//Variables

	
	//Fin
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == cboTipo) {
			actionPerformedCboTipo(e);
		}
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
	
	
	// varibles globale
	double precioprom = (Tienda.precio0 + Tienda.precio1 + Tienda.precio2 + Tienda.precio3 + Tienda.precio4)/5;
	double anchoprom = (Tienda.ancho0 + Tienda.ancho1 + Tienda.ancho2 + Tienda.ancho3 + Tienda.ancho4)/5;
	
	DecimalFormat formato1 = new DecimalFormat("0.00");
	//tipo de reporte del cbo}
	
	void tipoReporte() {
		// String tipoReporte = cboTipo.getSelectedItem().toString();
		
		int tipo = cboTipo.getSelectedIndex();
				
		 switch (tipo) {
	        case 0:
	            generarReporteVentasPorModelo();
	            break;
	        case 1:
	            generarReporteComparacionPrecio();
	            break;
	        case 2:
	            generarReporteComparacionCajas();
	            break;
	        case 3:
	            generarReporteEstadisticaPrecio();
	            break;
		 }
	}
	
	//generar reporte por modelo
	void generarReporteVentasPorModelo() {
		
		
		txtS.setText("VENTAS POR MODELO \n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo0 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta0 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas0 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado0) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota0) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo1 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta1 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas1 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado1) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota1) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo2 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta2 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas2 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado2) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota2) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo3 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta3 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas3 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado3) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota3) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo4 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta4 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas4 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado4) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota4) + "%\n\n");
	
		 txtS.setCaretPosition(0);
	}
	
	//generar reporte comparación precio con precio promedio
	void generarReporteComparacionPrecio() {
		
		txtS.setText("COMPARACIÓN DE PRECIOS CON EL PRECIO PROMEDIO\n\n" );
		
		txtS.append("Modelo : " + Tienda.modelo0 + "\n");
		txtS.append("Precio : S/. " + Tienda.precio0 + "\n");
		txtS.append("Precio promedio : S/. " + precioprom + "\n");
		if(Tienda.precio0 < precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}else if(Tienda.precio0  precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}else(Tienda.precio0 < precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}
			 
	}
	
	//generar reporte comparacion cajas vendidas con cantidad optima
	void generarReporteComparacionCajas() {
			 
	}
	
	// estadisticas sobre el precio
	void generarReporteEstadisticaPrecio(){
			 
		 }
	
	protected void actionPerformedCboTipo(ActionEvent e) {
		
		tipoReporte();
		
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-25 12:40:57.500
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-25 12:40:57.501
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 12:40:57.528
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.BorderLayout;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.awt.event.ActionEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;

public class GenerarReporte extends JDialog implements ActionListener {

	private final JPanel contentPanel = new JPanel();
	private JLabel lblTipo;
	private JComboBox cboTipo;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			GenerarReporte dialog = new GenerarReporte();
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Create the dialog.
	 */
	public GenerarReporte() {
		setTitle("Generar Reportes");
		setFont(new Font("Monospaced", Font.PLAIN, 13));
		setBounds(100, 100, 603, 302);
		getContentPane().setLayout(new BorderLayout());
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel, BorderLayout.CENTER);
		contentPanel.setLayout(null);
		
		lblTipo = new JLabel("Tipo de Reporte");
		lblTipo.setBounds(10, 12, 99, 25);
		contentPanel.add(lblTipo);
		
		cboTipo = new JComboBox();
		cboTipo.addActionListener(this);
		cboTipo.setModel(new DefaultComboBoxModel(new String[] {"Ventas por modelo", "Comparaci\u00F3n de precio con el precio promedio", "Comparaci\u00F3n de cajas vendidas con la cantidad \u00F3ptima", "Estadistica sobre el precio"}));
		cboTipo.setBounds(107, 12, 328, 25);
		contentPanel.add(cboTipo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(488, 14, 89, 23);
		contentPanel.add(btnCerrar);
		
		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 57, 567, 195);
		contentPanel.add(scrollPane);
		
		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);
	}
	//Variables

	
	//Fin
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == cboTipo) {
			actionPerformedCboTipo(e);
		}
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
	
	
	// varibles globale
	double precioprom = (Tienda.precio0 + Tienda.precio1 + Tienda.precio2 + Tienda.precio3 + Tienda.precio4)/5;
	double anchoprom = (Tienda.ancho0 + Tienda.ancho1 + Tienda.ancho2 + Tienda.ancho3 + Tienda.ancho4)/5;
	
	DecimalFormat formato1 = new DecimalFormat("0.00");
	//tipo de reporte del cbo}
	
	void tipoReporte() {
		// String tipoReporte = cboTipo.getSelectedItem().toString();
		
		int tipo = cboTipo.getSelectedIndex();
				
		 switch (tipo) {
	        case 0:
	            generarReporteVentasPorModelo();
	            break;
	        case 1:
	            generarReporteComparacionPrecio();
	            break;
	        case 2:
	            generarReporteComparacionCajas();
	            break;
	        case 3:
	            generarReporteEstadisticaPrecio();
	            break;
		 }
	}
	
	//generar reporte por modelo
	void generarReporteVentasPorModelo() {
		
		
		txtS.setText("VENTAS POR MODELO \n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo0 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta0 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas0 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado0) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota0) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo1 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta1 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas1 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado1) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota1) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo2 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta2 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas2 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado2) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota2) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo3 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta3 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas3 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado3) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota3) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo4 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta4 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas4 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado4) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota4) + "%\n\n");
	
		 txtS.setCaretPosition(0);
	}
	
	//generar reporte comparación precio con precio promedio
	void generarReporteComparacionPrecio() {
		
		txtS.setText("COMPARACIÓN DE PRECIOS CON EL PRECIO PROMEDIO\n\n" );
		
		txtS.append("Modelo : " + Tienda.modelo0 + "\n");
		txtS.append("Precio : S/. " + Tienda.precio0 + "\n");
		txtS.append("Precio promedio : S/. " + precioprom + "\n");
		if(Tienda.precio0 < precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}else if(Tienda.precio0  precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}else(Tienda.precio0 < precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}
			 
	}
	
	//generar reporte comparacion cajas vendidas con cantidad optima
	void generarReporteComparacionCajas() {
			 
	}
	
	// estadisticas sobre el precio
	void generarReporteEstadisticaPrecio(){
			 
		 }
	
	protected void actionPerformedCboTipo(ActionEvent e) {
		
		tipoReporte();
		
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 12:40:57.530
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 12:40:57.531
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 12:41:01.018
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.BorderLayout;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.awt.event.ActionEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;

public class GenerarReporte extends JDialog implements ActionListener {

	private final JPanel contentPanel = new JPanel();
	private JLabel lblTipo;
	private JComboBox cboTipo;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			GenerarReporte dialog = new GenerarReporte();
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Create the dialog.
	 */
	public GenerarReporte() {
		setTitle("Generar Reportes");
		setFont(new Font("Monospaced", Font.PLAIN, 13));
		setBounds(100, 100, 603, 302);
		getContentPane().setLayout(new BorderLayout());
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel, BorderLayout.CENTER);
		contentPanel.setLayout(null);
		
		lblTipo = new JLabel("Tipo de Reporte");
		lblTipo.setBounds(10, 12, 99, 25);
		contentPanel.add(lblTipo);
		
		cboTipo = new JComboBox();
		cboTipo.addActionListener(this);
		cboTipo.setModel(new DefaultComboBoxModel(new String[] {"Ventas por modelo", "Comparaci\u00F3n de precio con el precio promedio", "Comparaci\u00F3n de cajas vendidas con la cantidad \u00F3ptima", "Estadistica sobre el precio"}));
		cboTipo.setBounds(107, 12, 328, 25);
		contentPanel.add(cboTipo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(488, 14, 89, 23);
		contentPanel.add(btnCerrar);
		
		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 57, 567, 195);
		contentPanel.add(scrollPane);
		
		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);
	}
	//Variables

	
	//Fin
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == cboTipo) {
			actionPerformedCboTipo(e);
		}
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
	
	
	// varibles globale
	double precioprom = (Tienda.precio0 + Tienda.precio1 + Tienda.precio2 + Tienda.precio3 + Tienda.precio4)/5;
	double anchoprom = (Tienda.ancho0 + Tienda.ancho1 + Tienda.ancho2 + Tienda.ancho3 + Tienda.ancho4)/5;
	
	DecimalFormat formato1 = new DecimalFormat("0.00");
	//tipo de reporte del cbo}
	
	void tipoReporte() {
		// String tipoReporte = cboTipo.getSelectedItem().toString();
		
		int tipo = cboTipo.getSelectedIndex();
				
		 switch (tipo) {
	        case 0:
	            generarReporteVentasPorModelo();
	            break;
	        case 1:
	            generarReporteComparacionPrecio();
	            break;
	        case 2:
	            generarReporteComparacionCajas();
	            break;
	        case 3:
	            generarReporteEstadisticaPrecio();
	            break;
		 }
	}
	
	//generar reporte por modelo
	void generarReporteVentasPorModelo() {
		
		
		txtS.setText("VENTAS POR MODELO \n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo0 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta0 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas0 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado0) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota0) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo1 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta1 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas1 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado1) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota1) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo2 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta2 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas2 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado2) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota2) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo3 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta3 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas3 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado3) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota3) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo4 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta4 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas4 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado4) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota4) + "%\n\n");
	
		 txtS.setCaretPosition(0);
	}
	
	//generar reporte comparación precio con precio promedio
	void generarReporteComparacionPrecio() {
		
		txtS.setText("COMPARACIÓN DE PRECIOS CON EL PRECIO PROMEDIO\n\n" );
		
		txtS.append("Modelo : " + Tienda.modelo0 + "\n");
		txtS.append("Precio : S/. " + Tienda.precio0 + "\n");
		txtS.append("Precio promedio : S/. " + precioprom + "\n");
		if(Tienda.precio0 < precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}else if(Tienda.precio0 > precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}else(Tienda.precio0 < precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}
			 
	}
	
	//generar reporte comparacion cajas vendidas con cantidad optima
	void generarReporteComparacionCajas() {
			 
	}
	
	// estadisticas sobre el precio
	void generarReporteEstadisticaPrecio(){
			 
		 }
	
	protected void actionPerformedCboTipo(ActionEvent e) {
		
		tipoReporte();
		
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-25 12:41:01.020
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-25 12:41:01.021
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 12:41:01.044
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.BorderLayout;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.awt.event.ActionEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;

public class GenerarReporte extends JDialog implements ActionListener {

	private final JPanel contentPanel = new JPanel();
	private JLabel lblTipo;
	private JComboBox cboTipo;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			GenerarReporte dialog = new GenerarReporte();
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Create the dialog.
	 */
	public GenerarReporte() {
		setTitle("Generar Reportes");
		setFont(new Font("Monospaced", Font.PLAIN, 13));
		setBounds(100, 100, 603, 302);
		getContentPane().setLayout(new BorderLayout());
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel, BorderLayout.CENTER);
		contentPanel.setLayout(null);
		
		lblTipo = new JLabel("Tipo de Reporte");
		lblTipo.setBounds(10, 12, 99, 25);
		contentPanel.add(lblTipo);
		
		cboTipo = new JComboBox();
		cboTipo.addActionListener(this);
		cboTipo.setModel(new DefaultComboBoxModel(new String[] {"Ventas por modelo", "Comparaci\u00F3n de precio con el precio promedio", "Comparaci\u00F3n de cajas vendidas con la cantidad \u00F3ptima", "Estadistica sobre el precio"}));
		cboTipo.setBounds(107, 12, 328, 25);
		contentPanel.add(cboTipo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(488, 14, 89, 23);
		contentPanel.add(btnCerrar);
		
		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 57, 567, 195);
		contentPanel.add(scrollPane);
		
		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);
	}
	//Variables

	
	//Fin
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == cboTipo) {
			actionPerformedCboTipo(e);
		}
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
	
	
	// varibles globale
	double precioprom = (Tienda.precio0 + Tienda.precio1 + Tienda.precio2 + Tienda.precio3 + Tienda.precio4)/5;
	double anchoprom = (Tienda.ancho0 + Tienda.ancho1 + Tienda.ancho2 + Tienda.ancho3 + Tienda.ancho4)/5;
	
	DecimalFormat formato1 = new DecimalFormat("0.00");
	//tipo de reporte del cbo}
	
	void tipoReporte() {
		// String tipoReporte = cboTipo.getSelectedItem().toString();
		
		int tipo = cboTipo.getSelectedIndex();
				
		 switch (tipo) {
	        case 0:
	            generarReporteVentasPorModelo();
	            break;
	        case 1:
	            generarReporteComparacionPrecio();
	            break;
	        case 2:
	            generarReporteComparacionCajas();
	            break;
	        case 3:
	            generarReporteEstadisticaPrecio();
	            break;
		 }
	}
	
	//generar reporte por modelo
	void generarReporteVentasPorModelo() {
		
		
		txtS.setText("VENTAS POR MODELO \n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo0 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta0 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas0 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado0) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota0) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo1 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta1 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas1 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado1) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota1) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo2 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta2 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas2 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado2) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota2) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo3 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta3 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas3 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado3) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota3) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo4 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta4 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas4 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado4) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota4) + "%\n\n");
	
		 txtS.setCaretPosition(0);
	}
	
	//generar reporte comparación precio con precio promedio
	void generarReporteComparacionPrecio() {
		
		txtS.setText("COMPARACIÓN DE PRECIOS CON EL PRECIO PROMEDIO\n\n" );
		
		txtS.append("Modelo : " + Tienda.modelo0 + "\n");
		txtS.append("Precio : S/. " + Tienda.precio0 + "\n");
		txtS.append("Precio promedio : S/. " + precioprom + "\n");
		if(Tienda.precio0 < precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}else if(Tienda.precio0 > precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}else(Tienda.precio0 < precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}
			 
	}
	
	//generar reporte comparacion cajas vendidas con cantidad optima
	void generarReporteComparacionCajas() {
			 
	}
	
	// estadisticas sobre el precio
	void generarReporteEstadisticaPrecio(){
			 
		 }
	
	protected void actionPerformedCboTipo(ActionEvent e) {
		
		tipoReporte();
		
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-25 12:41:01.046
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-25 12:41:01.047
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-25 12:41:04.651
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.BorderLayout;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.awt.event.ActionEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;

public class GenerarReporte extends JDialog implements ActionListener {

	private final JPanel contentPanel = new JPanel();
	private JLabel lblTipo;
	private JComboBox cboTipo;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			GenerarReporte dialog = new GenerarReporte();
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Create the dialog.
	 */
	public GenerarReporte() {
		setTitle("Generar Reportes");
		setFont(new Font("Monospaced", Font.PLAIN, 13));
		setBounds(100, 100, 603, 302);
		getContentPane().setLayout(new BorderLayout());
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel, BorderLayout.CENTER);
		contentPanel.setLayout(null);
		
		lblTipo = new JLabel("Tipo de Reporte");
		lblTipo.setBounds(10, 12, 99, 25);
		contentPanel.add(lblTipo);
		
		cboTipo = new JComboBox();
		cboTipo.addActionListener(this);
		cboTipo.setModel(new DefaultComboBoxModel(new String[] {"Ventas por modelo", "Comparaci\u00F3n de precio con el precio promedio", "Comparaci\u00F3n de cajas vendidas con la cantidad \u00F3ptima", "Estadistica sobre el precio"}));
		cboTipo.setBounds(107, 12, 328, 25);
		contentPanel.add(cboTipo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(488, 14, 89, 23);
		contentPanel.add(btnCerrar);
		
		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 57, 567, 195);
		contentPanel.add(scrollPane);
		
		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);
	}
	//Variables

	
	//Fin
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == cboTipo) {
			actionPerformedCboTipo(e);
		}
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
	
	
	// varibles globale
	double precioprom = (Tienda.precio0 + Tienda.precio1 + Tienda.precio2 + Tienda.precio3 + Tienda.precio4)/5;
	double anchoprom = (Tienda.ancho0 + Tienda.ancho1 + Tienda.ancho2 + Tienda.ancho3 + Tienda.ancho4)/5;
	
	DecimalFormat formato1 = new DecimalFormat("0.00");
	//tipo de reporte del cbo}
	
	void tipoReporte() {
		// String tipoReporte = cboTipo.getSelectedItem().toString();
		
		int tipo = cboTipo.getSelectedIndex();
				
		 switch (tipo) {
	        case 0:
	            generarReporteVentasPorModelo();
	            break;
	        case 1:
	            generarReporteComparacionPrecio();
	            break;
	        case 2:
	            generarReporteComparacionCajas();
	            break;
	        case 3:
	            generarReporteEstadisticaPrecio();
	            break;
		 }
	}
	
	//generar reporte por modelo
	void generarReporteVentasPorModelo() {
		
		
		txtS.setText("VENTAS POR MODELO \n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo0 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta0 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas0 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado0) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota0) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo1 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta1 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas1 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado1) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota1) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo2 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta2 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas2 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado2) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota2) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo3 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta3 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas3 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado3) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota3) + "%\n\n");
		 
		 txtS.append("Modelo                      : " + Tienda.modelo4 + "\n");
		 txtS.append("Cantidad de ventas          : " + Tienda.contadorVenta4 + "\n");
		 txtS.append("Cantidad de cajas vendidas  : " + Tienda.cantUniVendidas4 + "\n");
		 txtS.append("Importe total vendido       : S/. " + formato1.format(Tienda.importeAcumulado4) + "\n");
		 txtS.append("Aporte a la cuota diaria    : " + formato1.format(Tienda.porcentajeCuota4) + "%\n\n");
	
		 txtS.setCaretPosition(0);
	}
	
	//generar reporte comparación precio con precio promedio
	void generarReporteComparacionPrecio() {
		
		txtS.setText("COMPARACIÓN DE PRECIOS CON EL PRECIO PROMEDIO\n\n" );
		
		txtS.append("Modelo : " + Tienda.modelo0 + "\n");
		txtS.append("Precio : S/. " + Tienda.precio0 + "\n");
		txtS.append("Precio promedio : S/. " + precioprom + "\n");
		if(Tienda.precio0 < precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}else if(Tienda.precio0 > precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}else(Tienda.precio0 < precioprom) {
			txtS.append("Precio : S/. " + Tienda.precio0 + "Mayor al promedio\n\n");
		}
			 
	}
	
	//generar reporte comparacion cajas vendidas con cantidad optima
	void generarReporteComparacionCajas() {
			 
	}
	
	// estadisticas sobre el precio
	void generarReporteEstadisticaPrecio(){
			 
		 }
	
	protected void actionPerformedCboTipo(ActionEvent e) {
		
		tipoReporte();
		
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
